{"ast":null,"code":"import _slicedToArray from\"C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useRef,useContext,useEffect}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEdit,faFloppyDisk}from'@fortawesome/free-solid-svg-icons';import renderHTML from'react-render-html';import{updateKanji}from'../hooks/updateKanji';import{UserContext}from'../App';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Mnemonic=function Mnemonic(_ref){var selectedKanji=_ref.selectedKanji;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(faEdit),_useState4=_slicedToArray(_useState3,2),icon=_useState4[0],setIcon=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),iconClass=_useState6[0],setIconClass=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),mnemonic=_useState8[0],setmnemonic=_useState8[1];var _useContext=useContext(UserContext),user=_useContext.user;var textDiv=useRef(null);// get the mnemonic to display\nuseEffect(function(){var mnemonicFound=false;// if logged in, get user's mnemonic\nif(user){mnemonicFound=selectedKanji.mnemonic.find(function(x){return x.username===user.username;});}// if not logged in, get default mnemonic\nif(!mnemonicFound||mnemonicFound===-1||mnemonicFound===undefined){mnemonicFound=selectedKanji.mnemonic.find(function(x){return x.username===\"\"||!x.hasOwnProperty('username');});}setmnemonic(mnemonicFound);},[selectedKanji,user,setmnemonic]);// toggle between editing mode\nvar toggleEditing=function toggleEditing(){// switch to edit mode\nif(!editing){// animation class\nsetIconClass(\"fa-beat-fade\");// change to save icon\nsetIcon(faFloppyDisk);// focus on textarea\ntextDiv.current.focus();}// save updated mnemonic and switch to normal mode\nelse{// remove animation class\nsetIconClass(\"\");// switch to edit icon\nsetIcon(faEdit);// remove focus \ntextDiv.current.blur();// update the mnemonic and kanji data\nvar updatedText=textDiv.current.innerHTML.substring(0,textDiv.current.innerHTML.indexOf(\"<svg\"));var foundIndex=selectedKanji.mnemonic.findIndex(function(x){return x.username===user.username;});var _mnemonic={text:updatedText,username:user.username};if(foundIndex!==-1){selectedKanji.mnemonic[foundIndex]=_mnemonic;}else{selectedKanji.mnemonic.push(_mnemonic);}// send post request to database\nupdateKanji({selectedKanji:selectedKanji});}setEditing(!editing);};return/*#__PURE__*/_jsxs(\"div\",{className:\"mnemonic\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"How to remember:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"textDiv\",contentEditable:editing,suppressContentEditableWarning:true,ref:textDiv,tabIndex:0,children:[mnemonic&&renderHTML(mnemonic.text),/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:icon,className:iconClass,onClick:function onClick(){return toggleEditing();}})]})]});};export default Mnemonic;","map":{"version":3,"names":["useState","useRef","useContext","useEffect","FontAwesomeIcon","faEdit","faFloppyDisk","renderHTML","updateKanji","UserContext","jsx","_jsx","jsxs","_jsxs","Mnemonic","_ref","selectedKanji","_useState","_useState2","_slicedToArray","editing","setEditing","_useState3","_useState4","icon","setIcon","_useState5","_useState6","iconClass","setIconClass","_useState7","_useState8","mnemonic","setmnemonic","_useContext","user","textDiv","mnemonicFound","find","x","username","undefined","hasOwnProperty","toggleEditing","current","focus","blur","updatedText","innerHTML","substring","indexOf","foundIndex","findIndex","text","push","className","children","contentEditable","suppressContentEditableWarning","ref","tabIndex","onClick"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/components/Mnemonic.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\r\nimport renderHTML from 'react-render-html'\r\nimport { updateKanji } from '../hooks/updateKanji';\r\nimport { UserContext } from '../App';\r\n\r\nconst Mnemonic = ({ selectedKanji }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [icon, setIcon] = useState(faEdit)\r\n    const [iconClass, setIconClass] = useState(\"\")\r\n    const [mnemonic, setmnemonic] = useState(\"\")\r\n    const { user } = useContext(UserContext)\r\n    const textDiv = useRef(null)\r\n\r\n    // get the mnemonic to display\r\n    useEffect(() => {\r\n        let mnemonicFound = false;\r\n        // if logged in, get user's mnemonic\r\n        if (user) {\r\n            mnemonicFound = selectedKanji.mnemonic.find(x => x.username === user.username)\r\n        }\r\n        // if not logged in, get default mnemonic\r\n        if (!mnemonicFound || mnemonicFound === -1 || mnemonicFound === undefined) {\r\n            mnemonicFound = selectedKanji.mnemonic.find(x => x.username === \"\" || !x.hasOwnProperty('username'))\r\n        }\r\n\r\n        setmnemonic(mnemonicFound)\r\n    }, [selectedKanji, user, setmnemonic])\r\n\r\n    // toggle between editing mode\r\n    const toggleEditing = () => {\r\n        // switch to edit mode\r\n        if (!editing) {\r\n            // animation class\r\n            setIconClass(\"fa-beat-fade\")\r\n            // change to save icon\r\n            setIcon(faFloppyDisk)\r\n            // focus on textarea\r\n            textDiv.current.focus()\r\n        }\r\n        // save updated mnemonic and switch to normal mode\r\n        else {\r\n            // remove animation class\r\n            setIconClass(\"\")\r\n            // switch to edit icon\r\n            setIcon(faEdit)\r\n            // remove focus \r\n            textDiv.current.blur()\r\n            // update the mnemonic and kanji data\r\n            const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"))\r\n            const foundIndex = selectedKanji.mnemonic.findIndex(x => x.username === user.username)\r\n            const mnemonic = {\r\n                text: updatedText,\r\n                username: user.username\r\n            }\r\n\r\n            if (foundIndex !== -1) {\r\n                selectedKanji.mnemonic[foundIndex] = mnemonic\r\n            }\r\n            else {\r\n                selectedKanji.mnemonic.push(mnemonic)\r\n            }\r\n            // send post request to database\r\n            updateKanji({ selectedKanji })\r\n        }\r\n\r\n        setEditing(!editing)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mnemonic\">\r\n            <p>How to remember:</p>\r\n            <div className=\"textDiv\" contentEditable={editing} suppressContentEditableWarning={true} ref={textDiv} tabIndex={0}>\r\n                {mnemonic && renderHTML(mnemonic.text)}\r\n                <FontAwesomeIcon icon={icon} className={iconClass} onClick={() => toggleEditing()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mnemonic"],"mappings":"gJAAA,OAASA,QAAQ,CAAEC,MAAM,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC/D,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,MAAM,CAAEC,YAAY,KAAQ,mCAAmC,CACxE,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,OAASC,WAAW,KAAQ,sBAAsB,CAClD,OAASC,WAAW,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErC,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAA0B,IAApB,CAAAC,aAAa,CAAAD,IAAA,CAAbC,aAAa,CAC7B,IAAAC,SAAA,CAA8BjB,QAAQ,CAAC,KAAK,CAAC,CAAAkB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAAwBtB,QAAQ,CAACK,MAAM,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IACpB,IAAAG,UAAA,CAAkC1B,QAAQ,CAAC,EAAE,CAAC,CAAA2B,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAvCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAC9B,IAAAG,UAAA,CAAgC9B,QAAQ,CAAC,EAAE,CAAC,CAAA+B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAArCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAC5B,IAAAG,WAAA,CAAiBhC,UAAU,CAACO,WAAW,CAAC,CAAhC0B,IAAI,CAAAD,WAAA,CAAJC,IAAI,CACZ,GAAM,CAAAC,OAAO,CAAGnC,MAAM,CAAC,IAAI,CAAC,CAE5B;AACAE,SAAS,CAAC,UAAM,CACZ,GAAI,CAAAkC,aAAa,CAAG,KAAK,CACzB;AACA,GAAIF,IAAI,CAAE,CACNE,aAAa,CAAGrB,aAAa,CAACgB,QAAQ,CAACM,IAAI,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACC,QAAQ,GAAKL,IAAI,CAACK,QAAQ,GAAC,CAClF,CACA;AACA,GAAI,CAACH,aAAa,EAAIA,aAAa,GAAK,CAAC,CAAC,EAAIA,aAAa,GAAKI,SAAS,CAAE,CACvEJ,aAAa,CAAGrB,aAAa,CAACgB,QAAQ,CAACM,IAAI,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACC,QAAQ,GAAK,EAAE,EAAI,CAACD,CAAC,CAACG,cAAc,CAAC,UAAU,CAAC,GAAC,CACxG,CAEAT,WAAW,CAACI,aAAa,CAAC,CAC9B,CAAC,CAAE,CAACrB,aAAa,CAAEmB,IAAI,CAAEF,WAAW,CAAC,CAAC,CAEtC;AACA,GAAM,CAAAU,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CACxB;AACA,GAAI,CAACvB,OAAO,CAAE,CACV;AACAS,YAAY,CAAC,cAAc,CAAC,CAC5B;AACAJ,OAAO,CAACnB,YAAY,CAAC,CACrB;AACA8B,OAAO,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC,CAC3B,CACA;AAAA,IACK,CACD;AACAhB,YAAY,CAAC,EAAE,CAAC,CAChB;AACAJ,OAAO,CAACpB,MAAM,CAAC,CACf;AACA+B,OAAO,CAACQ,OAAO,CAACE,IAAI,CAAC,CAAC,CACtB;AACA,GAAM,CAAAC,WAAW,CAAGX,OAAO,CAACQ,OAAO,CAACI,SAAS,CAACC,SAAS,CAAC,CAAC,CAAEb,OAAO,CAACQ,OAAO,CAACI,SAAS,CAACE,OAAO,CAAC,MAAM,CAAC,CAAC,CACrG,GAAM,CAAAC,UAAU,CAAGnC,aAAa,CAACgB,QAAQ,CAACoB,SAAS,CAAC,SAAAb,CAAC,QAAI,CAAAA,CAAC,CAACC,QAAQ,GAAKL,IAAI,CAACK,QAAQ,GAAC,CACtF,GAAM,CAAAR,SAAQ,CAAG,CACbqB,IAAI,CAAEN,WAAW,CACjBP,QAAQ,CAAEL,IAAI,CAACK,QACnB,CAAC,CAED,GAAIW,UAAU,GAAK,CAAC,CAAC,CAAE,CACnBnC,aAAa,CAACgB,QAAQ,CAACmB,UAAU,CAAC,CAAGnB,SAAQ,CACjD,CAAC,IACI,CACDhB,aAAa,CAACgB,QAAQ,CAACsB,IAAI,CAACtB,SAAQ,CAAC,CACzC,CACA;AACAxB,WAAW,CAAC,CAAEQ,aAAa,CAAbA,aAAc,CAAC,CAAC,CAClC,CAEAK,UAAU,CAAC,CAACD,OAAO,CAAC,CACxB,CAAC,CAED,mBACIP,KAAA,QAAK0C,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB7C,IAAA,MAAA6C,QAAA,CAAG,kBAAgB,CAAG,CAAC,cACvB3C,KAAA,QAAK0C,SAAS,CAAC,SAAS,CAACE,eAAe,CAAErC,OAAQ,CAACsC,8BAA8B,CAAE,IAAK,CAACC,GAAG,CAAEvB,OAAQ,CAACwB,QAAQ,CAAE,CAAE,CAAAJ,QAAA,EAC9GxB,QAAQ,EAAIzB,UAAU,CAACyB,QAAQ,CAACqB,IAAI,CAAC,cACtC1C,IAAA,CAACP,eAAe,EAACoB,IAAI,CAAEA,IAAK,CAAC+B,SAAS,CAAE3B,SAAU,CAACiC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAlB,aAAa,CAAC,CAAC,EAAC,CAAE,CAAC,EACpF,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAA7B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}