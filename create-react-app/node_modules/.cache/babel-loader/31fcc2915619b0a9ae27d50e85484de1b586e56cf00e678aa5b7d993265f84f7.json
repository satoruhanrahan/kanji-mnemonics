{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sator\\\\WebProjects\\\\kanjiMnemonics\\\\create-react-app\\\\src\\\\components\\\\Mnemonic.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\nimport renderHTML from 'react-render-html';\nimport { updateKanji } from '../hooks/updateKanji';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mnemonic = _ref => {\n  _s();\n  let {\n    kanji\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [icon, setIcon] = useState(faEdit);\n  const [iconClass, setIconClass] = useState(\"\");\n  const [mnemonic, setmnemonic] = useState(\"\");\n  const {\n    user\n  } = useContext(UserContext);\n  const userId = user._id;\n  const textDiv = useRef(null);\n  useEffect(() => {\n    let mnemonicFound = kanji.mnemonic.find(x => x.user_id === userId);\n    if (!mnemonicFound) {\n      mnemonicFound = kanji.mnemonic.find(x => x.user_id.length === 0);\n    }\n    setmnemonic(mnemonicFound);\n  });\n  const toggleEditing = () => {\n    if (!editing) {\n      setIconClass(\"fa-beat-fade\");\n      setIcon(faFloppyDisk);\n      textDiv.current.focus();\n    } else {\n      setIconClass(\"\");\n      setIcon(faEdit);\n      textDiv.current.blur();\n      const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"));\n      updateKanji({\n        kanji,\n        userId,\n        updatedText\n      });\n    }\n    setEditing(!editing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mnemonic\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How to remember:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textDiv\",\n      contentEditable: editing,\n      suppressContentEditableWarning: true,\n      ref: textDiv,\n      tabIndex: 0,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: icon,\n        className: iconClass,\n        onClick: () => toggleEditing()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Mnemonic, \"PlZJ8n8mwo7yIm2HD0XMhn9nNyY=\");\n_c = Mnemonic;\nexport default Mnemonic;\nvar _c;\n$RefreshReg$(_c, \"Mnemonic\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","FontAwesomeIcon","faEdit","faFloppyDisk","renderHTML","updateKanji","UserContext","jsxDEV","_jsxDEV","Mnemonic","_ref","_s","kanji","editing","setEditing","icon","setIcon","iconClass","setIconClass","mnemonic","setmnemonic","user","userId","_id","textDiv","mnemonicFound","find","x","user_id","length","toggleEditing","current","focus","blur","updatedText","innerHTML","substring","indexOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","suppressContentEditableWarning","ref","tabIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/components/Mnemonic.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\r\nimport renderHTML from 'react-render-html'\r\nimport { updateKanji } from '../hooks/updateKanji';\r\nimport { UserContext } from '../App';\r\n\r\nconst Mnemonic = ({ kanji }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [icon, setIcon] = useState(faEdit)\r\n    const [iconClass, setIconClass] = useState(\"\")\r\n    const [mnemonic, setmnemonic] = useState(\"\")\r\n    const { user } = useContext(UserContext)\r\n    const userId = user._id\r\n    const textDiv = useRef(null)\r\n\r\n    useEffect(() => {\r\n        let mnemonicFound = kanji.mnemonic.find(x => x.user_id === userId)\r\n        if (!mnemonicFound) {\r\n            mnemonicFound = kanji.mnemonic.find(x => x.user_id.length === 0)\r\n        }\r\n        setmnemonic(mnemonicFound)\r\n    })\r\n\r\n    const toggleEditing = () => {\r\n        if (!editing) {\r\n            setIconClass(\"fa-beat-fade\")\r\n            setIcon(faFloppyDisk)\r\n            textDiv.current.focus()\r\n        }\r\n        else {\r\n            setIconClass(\"\")\r\n            setIcon(faEdit)\r\n            textDiv.current.blur()\r\n            const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"))\r\n            updateKanji({ kanji, userId, updatedText })\r\n        }\r\n\r\n        setEditing(!editing)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mnemonic\">\r\n            <p>How to remember:</p>\r\n            <div className=\"textDiv\" contentEditable={editing} suppressContentEditableWarning={true} ref={textDiv} tabIndex={0}>\r\n                {/* {mnemonic && renderHTML(mnemonic.text)} */}\r\n                <FontAwesomeIcon icon={icon} className={iconClass} onClick={() => toggleEditing()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mnemonic"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}