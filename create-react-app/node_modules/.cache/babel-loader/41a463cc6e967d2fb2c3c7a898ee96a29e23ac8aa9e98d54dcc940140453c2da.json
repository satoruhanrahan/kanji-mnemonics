{"ast":null,"code":"function hyphenToCamelcase(str) {\n  var result = '';\n  var upper = false;\n  for (var i = 0; i < str.length; i++) {\n    var c = str[i];\n    if (c === '-') {\n      upper = true;\n      continue;\n    }\n    if (upper) {\n      c = c.toUpperCase();\n      upper = false;\n    }\n    result += c;\n  }\n  return result;\n}\nfunction convertKey(key) {\n  var res = hyphenToCamelcase(key);\n  if (key.indexOf('-ms-') === 0) {\n    res = res[0].toLowerCase() + res.slice(1);\n  }\n  return res;\n}\nmodule.exports = function (styleStr) {\n  return styleStr.split(';').reduce(function (res, token) {\n    if (token.slice(0, 7) === 'base64,') {\n      res[res.length - 1] += ';' + token;\n    } else {\n      res.push(token);\n    }\n    return res;\n  }, []).reduce(function (obj, str) {\n    var tokens = str.split(':');\n    var key = tokens[0].trim();\n    if (key) {\n      var value = tokens.slice(1).join(':').trim();\n      obj[convertKey(key)] = value;\n    }\n    return obj;\n  }, {});\n};","map":{"version":3,"names":["hyphenToCamelcase","str","result","upper","i","length","c","toUpperCase","convertKey","key","res","indexOf","toLowerCase","slice","module","exports","styleStr","split","reduce","token","push","obj","tokens","trim","value","join"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/node_modules/react-render-html/lib/style-parser.js"],"sourcesContent":["function hyphenToCamelcase(str) {\n  var result = '';\n  var upper = false;\n\n  for (var i = 0; i < str.length; i++) {\n    var c = str[i];\n\n    if (c === '-') {\n      upper = true;\n      continue;\n    }\n\n    if (upper) {\n      c = c.toUpperCase();\n      upper = false;\n    }\n\n    result += c;\n  }\n\n  return result;\n}\n\nfunction convertKey(key) {\n  var res = hyphenToCamelcase(key);\n\n  if (key.indexOf('-ms-') === 0) {\n    res = res[0].toLowerCase() + res.slice(1);\n  }\n\n  return res;\n}\n\nmodule.exports = function (styleStr) {\n  return styleStr\n    .split(';')\n    .reduce(function (res, token) {\n      if (token.slice(0, 7) === 'base64,') {\n        res[res.length - 1] += ';' + token;\n      } else {\n        res.push(token);\n      }\n      return res;\n    }, [])\n    .reduce(function (obj, str) {\n      var tokens = str.split(':');\n      var key = tokens[0].trim();\n      if (key) {\n        var value = tokens.slice(1).join(':').trim();\n        obj[convertKey(key)] = value;\n      }\n      return obj;\n    }, {});\n};\n"],"mappings":"AAAA,SAASA,iBAAiBA,CAACC,GAAG,EAAE;EAC9B,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK,GAAG,KAAK;EAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,IAAIE,CAAC,GAAGL,GAAG,CAACG,CAAC,CAAC;IAEd,IAAIE,CAAC,KAAK,GAAG,EAAE;MACbH,KAAK,GAAG,IAAI;MACZ;IACF;IAEA,IAAIA,KAAK,EAAE;MACTG,CAAC,GAAGA,CAAC,CAACC,WAAW,CAAC,CAAC;MACnBJ,KAAK,GAAG,KAAK;IACf;IAEAD,MAAM,IAAII,CAAC;EACb;EAEA,OAAOJ,MAAM;AACf;AAEA,SAASM,UAAUA,CAACC,GAAG,EAAE;EACvB,IAAIC,GAAG,GAAGV,iBAAiB,CAACS,GAAG,CAAC;EAEhC,IAAIA,GAAG,CAACE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IAC7BD,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEA,OAAOH,GAAG;AACZ;AAEAI,MAAM,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAE;EACnC,OAAOA,QAAQ,CACZC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,UAAUR,GAAG,EAAES,KAAK,EAAE;IAC5B,IAAIA,KAAK,CAACN,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,EAAE;MACnCH,GAAG,CAACA,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,GAAGc,KAAK;IACpC,CAAC,MAAM;MACLT,GAAG,CAACU,IAAI,CAACD,KAAK,CAAC;IACjB;IACA,OAAOT,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC,CACLQ,MAAM,CAAC,UAAUG,GAAG,EAAEpB,GAAG,EAAE;IAC1B,IAAIqB,MAAM,GAAGrB,GAAG,CAACgB,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAIR,GAAG,GAAGa,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAC1B,IAAId,GAAG,EAAE;MACP,IAAIe,KAAK,GAAGF,MAAM,CAACT,KAAK,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,CAAC;MAC5CF,GAAG,CAACb,UAAU,CAACC,GAAG,CAAC,CAAC,GAAGe,KAAK;IAC9B;IACA,OAAOH,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}