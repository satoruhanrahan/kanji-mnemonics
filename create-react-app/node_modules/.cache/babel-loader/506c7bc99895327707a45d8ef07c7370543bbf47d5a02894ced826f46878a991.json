{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sator\\\\WebProjects\\\\kanjiMnemonics\\\\create-react-app\\\\src\\\\components\\\\Mnemonic.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\nimport renderHTML from 'react-render-html';\nimport { updateKanji } from '../hooks/updateKanji';\nimport { UserContext } from '../App';\nimport { Tooltip } from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mnemonic = _ref => {\n  _s();\n  let {\n    selectedKanji\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [icon, setIcon] = useState(faEdit);\n  const [iconClass, setIconClass] = useState(\"\");\n  const [mnemonic, setmnemonic] = useState(\"\");\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const {\n    user\n  } = useContext(UserContext);\n  const textDiv = useRef(null);\n  const editIcon = useRef(null);\n\n  // get the mnemonic to display\n  useEffect(() => {\n    let mnemonicFound = false;\n    // if logged in, get user's mnemonic\n    if (user) {\n      mnemonicFound = selectedKanji.mnemonic.find(x => x.username === user.username);\n\n      // set tooltip content\n      setTooltipContent(\"Edit mnemonic\");\n    } else {\n      // set tooltip content\n      setTooltipContent(\"Login to edit\");\n    }\n\n    // if mnemonic not found, get default mnemonic\n    if (!mnemonicFound || mnemonicFound === -1 || mnemonicFound === undefined) {\n      mnemonicFound = selectedKanji.mnemonic.find(x => x.username === \"\" || !x.hasOwnProperty('username'));\n    }\n    setmnemonic(mnemonicFound);\n  }, [selectedKanji, user, setmnemonic]);\n\n  // toggle between editing mode\n  const toggleEditing = () => {\n    // return if not logged in\n    if (!user) {\n      return;\n    }\n\n    // switch to edit mode\n    if (!editing) {\n      // animation class\n      setIconClass(\"fa-beat-fade\");\n      // change to save icon\n      setIcon(faFloppyDisk);\n      // focus on textarea\n      textDiv.current.focus();\n    }\n    // save updated mnemonic and switch to normal mode\n    else {\n      // remove animation class\n      setIconClass(\"\");\n      // switch to edit icon\n      setIcon(faEdit);\n      // remove focus \n      textDiv.current.blur();\n      // update the mnemonic and kanji data\n      const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"));\n      const foundIndex = selectedKanji.mnemonic.findIndex(x => x.username === user.username);\n      const mnemonic = {\n        text: updatedText,\n        username: user.username\n      };\n      if (foundIndex !== -1) {\n        selectedKanji.mnemonic[foundIndex] = mnemonic;\n      } else {\n        selectedKanji.mnemonic.push(mnemonic);\n      }\n      // send post request to database\n      updateKanji({\n        selectedKanji\n      });\n    }\n    setEditing(!editing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mnemonic\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How to remember:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textDiv\",\n      contentEditable: editing,\n      suppressContentEditableWarning: true,\n      ref: textDiv,\n      tabIndex: 0,\n      children: [mnemonic && renderHTML(mnemonic.text), /*#__PURE__*/_jsxDEV(Tooltip, {\n        id: \"edit-tooltip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: icon,\n        className: iconClass,\n        onClick: () => toggleEditing(),\n        \"data-tooltip-id\": \"edit-tooltip\",\n        \"data-tooltip-content\": tooltipContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Mnemonic, \"H0PorlxlaODd1q/fsKiYJt4G9MQ=\");\n_c = Mnemonic;\nexport default Mnemonic;\nvar _c;\n$RefreshReg$(_c, \"Mnemonic\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","FontAwesomeIcon","faEdit","faFloppyDisk","renderHTML","updateKanji","UserContext","Tooltip","jsxDEV","_jsxDEV","Mnemonic","_ref","_s","selectedKanji","editing","setEditing","icon","setIcon","iconClass","setIconClass","mnemonic","setmnemonic","tooltipContent","setTooltipContent","user","textDiv","editIcon","mnemonicFound","find","x","username","undefined","hasOwnProperty","toggleEditing","current","focus","blur","updatedText","innerHTML","substring","indexOf","foundIndex","findIndex","text","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","suppressContentEditableWarning","ref","tabIndex","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/components/Mnemonic.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\r\nimport renderHTML from 'react-render-html'\r\nimport { updateKanji } from '../hooks/updateKanji';\r\nimport { UserContext } from '../App';\r\nimport { Tooltip } from 'react-tooltip'\r\n\r\n\r\nconst Mnemonic = ({ selectedKanji }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [icon, setIcon] = useState(faEdit)\r\n    const [iconClass, setIconClass] = useState(\"\")\r\n    const [mnemonic, setmnemonic] = useState(\"\")\r\n    const [tooltipContent, setTooltipContent] = useState(\"\")\r\n    const { user } = useContext(UserContext)\r\n    const textDiv = useRef(null)\r\n    const editIcon = useRef(null)\r\n\r\n    // get the mnemonic to display\r\n    useEffect(() => {\r\n        let mnemonicFound = false;\r\n        // if logged in, get user's mnemonic\r\n        if (user) {\r\n            mnemonicFound = selectedKanji.mnemonic.find(x => x.username === user.username)\r\n\r\n            // set tooltip content\r\n            setTooltipContent(\"Edit mnemonic\")\r\n        }\r\n        else {\r\n            // set tooltip content\r\n            setTooltipContent(\"Login to edit\")\r\n        }\r\n\r\n        // if mnemonic not found, get default mnemonic\r\n        if (!mnemonicFound || mnemonicFound === -1 || mnemonicFound === undefined) {\r\n            mnemonicFound = selectedKanji.mnemonic.find(x => x.username === \"\" || !x.hasOwnProperty('username'))\r\n        }\r\n\r\n        setmnemonic(mnemonicFound)\r\n    }, [selectedKanji, user, setmnemonic])\r\n\r\n    // toggle between editing mode\r\n    const toggleEditing = () => {\r\n        // return if not logged in\r\n        if (!user) {\r\n            return\r\n        }\r\n\r\n        // switch to edit mode\r\n        if (!editing) {\r\n            // animation class\r\n            setIconClass(\"fa-beat-fade\")\r\n            // change to save icon\r\n            setIcon(faFloppyDisk)\r\n            // focus on textarea\r\n            textDiv.current.focus()\r\n        }\r\n        // save updated mnemonic and switch to normal mode\r\n        else {\r\n            // remove animation class\r\n            setIconClass(\"\")\r\n            // switch to edit icon\r\n            setIcon(faEdit)\r\n            // remove focus \r\n            textDiv.current.blur()\r\n            // update the mnemonic and kanji data\r\n            const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"))\r\n            const foundIndex = selectedKanji.mnemonic.findIndex(x => x.username === user.username)\r\n            const mnemonic = {\r\n                text: updatedText,\r\n                username: user.username\r\n            }\r\n\r\n            if (foundIndex !== -1) {\r\n                selectedKanji.mnemonic[foundIndex] = mnemonic\r\n            }\r\n            else {\r\n                selectedKanji.mnemonic.push(mnemonic)\r\n            }\r\n            // send post request to database\r\n            updateKanji({ selectedKanji })\r\n        }\r\n\r\n        setEditing(!editing)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mnemonic\">\r\n            <p>How to remember:</p>\r\n            <div className=\"textDiv\" contentEditable={editing} suppressContentEditableWarning={true} ref={textDiv} tabIndex={0}>\r\n                {mnemonic && renderHTML(mnemonic.text)}\r\n                <Tooltip id=\"edit-tooltip\" />\r\n                <FontAwesomeIcon icon={icon} className={iconClass} onClick={() => toggleEditing()} data-tooltip-id=\"edit-tooltip\" data-tooltip-content={tooltipContent} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mnemonic"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}