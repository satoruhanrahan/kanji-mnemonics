{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { UserContext } from \"../App\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const signup = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update auth context\n      setUser(json);\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"8qluftEV8NzdZKiKYpKc41Gkoaw=\");","map":{"version":3,"names":["useState","UserContext","useSignup","_s","error","setError","isLoading","setIsLoading","user","setUser","useContext","signup","username","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { UserContext } from \"../App\"\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    const signup = async (username, password) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/api/user/signup', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username, password })\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if (response.ok) {\r\n            // save user to local storage\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            // update auth context\r\n            setUser(json)\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return { signup, isLoading, error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,QAAQ;AAEpC,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAGC,UAAU,CAACT,WAAW,CAAC;EAEjD,MAAMU,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACzCN,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;IACxB;IACA,IAAIU,QAAQ,CAACQ,EAAE,EAAE;MACb;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAZ,OAAO,CAACY,IAAI,CAAC;MAEbd,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEI,MAAM;IAAEL,SAAS;IAAEF;EAAM,CAAC;AACvC,CAAC;AAAAD,EAAA,CAjCYD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}