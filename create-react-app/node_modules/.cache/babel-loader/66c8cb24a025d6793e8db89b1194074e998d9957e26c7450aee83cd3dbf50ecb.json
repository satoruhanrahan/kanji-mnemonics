{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sator\\\\WebProjects\\\\kanjiMnemonics\\\\create-react-app\\\\src\\\\components\\\\Mnemonic.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\nimport renderHTML from 'react-render-html';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mnemonic = _ref => {\n  _s();\n  let {\n    mnemonic\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [icon, setIcon] = useState(faEdit);\n  const [iconClass, setIconClass] = useState(\"\");\n  const mnemonicText = useRef(null);\n  const toggleEditing = () => {\n    if (!editing) {\n      setIconClass(\"fa-beat-fade\");\n      setIcon(faFloppyDisk);\n      mnemonicText.current.focus();\n    } else {\n      setIconClass(\"\");\n      setIcon(faEdit);\n      mnemonicText.current.blur();\n    }\n    setEditing(!editing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mnemonic\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How to remember:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mnemonicText\",\n      contentEditable: editing,\n      suppressContentEditableWarning: true,\n      ref: mnemonicText,\n      tabIndex: 0,\n      children: [mnemonic && renderHTML(mnemonic.text), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: icon,\n        className: iconClass,\n        onClick: () => toggleEditing(),\n        onBlur: () => toggleEditing()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Mnemonic, \"lMWKY0AmThnVb3k/9MfPl4XdAyo=\");\n_c = Mnemonic;\nexport default Mnemonic;\nvar _c;\n$RefreshReg$(_c, \"Mnemonic\");","map":{"version":3,"names":["useState","useRef","FontAwesomeIcon","faEdit","faFloppyDisk","renderHTML","jsxDEV","_jsxDEV","Mnemonic","_ref","_s","mnemonic","editing","setEditing","icon","setIcon","iconClass","setIconClass","mnemonicText","toggleEditing","current","focus","blur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","suppressContentEditableWarning","ref","tabIndex","text","onClick","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/components/Mnemonic.js"],"sourcesContent":["import { useState, useRef } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\r\nimport renderHTML from 'react-render-html'\r\n\r\nconst Mnemonic = ({ mnemonic }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [icon, setIcon] = useState(faEdit)\r\n    const [iconClass, setIconClass] = useState(\"\")\r\n\r\n    const mnemonicText = useRef(null)\r\n\r\n    const toggleEditing = () => {\r\n        if (!editing) {\r\n            setIconClass(\"fa-beat-fade\")\r\n            setIcon(faFloppyDisk)\r\n            mnemonicText.current.focus()\r\n        }\r\n        else {\r\n            setIconClass(\"\")\r\n            setIcon(faEdit)\r\n            mnemonicText.current.blur()\r\n        }\r\n\r\n        setEditing(!editing)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mnemonic\">\r\n            <p>How to remember:</p>\r\n            <div className=\"mnemonicText\" contentEditable={editing} suppressContentEditableWarning={true} ref={mnemonicText} tabIndex={0}>\r\n                {mnemonic && renderHTML(mnemonic.text)}\r\n                <FontAwesomeIcon icon={icon} className={iconClass} onClick={() => toggleEditing()} onBlur={() => toggleEditing()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mnemonic"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,EAAEC,YAAY,QAAQ,mCAAmC;AACxE,OAAOC,UAAU,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACG,MAAM,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMkB,YAAY,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACP,OAAO,EAAE;MACVK,YAAY,CAAC,cAAc,CAAC;MAC5BF,OAAO,CAACX,YAAY,CAAC;MACrBc,YAAY,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;IAChC,CAAC,MACI;MACDJ,YAAY,CAAC,EAAE,CAAC;MAChBF,OAAO,CAACZ,MAAM,CAAC;MACfe,YAAY,CAACE,OAAO,CAACE,IAAI,CAAC,CAAC;IAC/B;IAEAT,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,oBACIL,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBjB,OAAA;MAAAiB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvBrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAACM,eAAe,EAAEjB,OAAQ;MAACkB,8BAA8B,EAAE,IAAK;MAACC,GAAG,EAAEb,YAAa;MAACc,QAAQ,EAAE,CAAE;MAAAR,QAAA,GACxHb,QAAQ,IAAIN,UAAU,CAACM,QAAQ,CAACsB,IAAI,CAAC,eACtC1B,OAAA,CAACL,eAAe;QAACY,IAAI,EAAEA,IAAK;QAACS,SAAS,EAAEP,SAAU;QAACkB,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAAC,CAAE;QAACgB,MAAM,EAAEA,CAAA,KAAMhB,aAAa,CAAC;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA/BKF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAiCd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}