{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sator\\\\WebProjects\\\\kanjiMnemonics\\\\create-react-app\\\\src\\\\components\\\\Mnemonic.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\nimport renderHTML from 'react-render-html';\nimport { updateKanji } from '../hooks/updateKanji';\nimport { KanjiContext, UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mnemonic = _ref => {\n  _s();\n  let {\n    selectedKanji\n  } = _ref;\n  const {\n    kanji,\n    setKanji\n  } = useContext(KanjiContext);\n  const [editing, setEditing] = useState(false);\n  const [icon, setIcon] = useState(faEdit);\n  const [iconClass, setIconClass] = useState(\"\");\n  const [mnemonic, setmnemonic] = useState(\"\");\n  const {\n    user\n  } = useContext(UserContext);\n  const textDiv = useRef(null);\n\n  // find the user's mnemonic to display\n  useEffect(() => {\n    let mnemonicFound = selectedKanji.mnemonic.find(x => x.username === user.username);\n    if (!mnemonicFound) {\n      mnemonicFound = selectedKanji.mnemonic.find(x => x.username === \"\" || !x.hasOwnProperty('username'));\n    }\n    setmnemonic(mnemonicFound);\n  }, [selectedKanji, user, setmnemonic]);\n\n  // toggle between editing mode\n  const toggleEditing = () => {\n    // switch to edit mode\n    if (!editing) {\n      // animation class\n      setIconClass(\"fa-beat-fade\");\n      // change to save icon\n      setIcon(faFloppyDisk);\n      // focus on textarea\n      textDiv.current.focus();\n    }\n    // save updated mnemonic and switch to normal mode\n    else {\n      // remove animation class\n      setIconClass(\"\");\n      // switch to edit icon\n      setIcon(faEdit);\n      // remove focus \n      textDiv.current.blur();\n      // update the mnemonic and kanji data\n      const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"));\n      const foundIndex = selectedKanji.mnemonic.findIndex(x => x.username === user.username);\n      const mnemonic = {\n        text: updatedText,\n        username: user.username\n      };\n      if (foundIndex !== -1) {\n        selectedKanji.mnemonic[foundIndex] = mnemonic;\n      } else {\n        selectedKanji.mnemonic.push(mnemonic);\n      }\n      // send post request to database\n      updateKanji({\n        selectedKanji\n      });\n    }\n    setEditing(!editing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mnemonic\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How to remember:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textDiv\",\n      contentEditable: editing,\n      suppressContentEditableWarning: true,\n      ref: textDiv,\n      tabIndex: 0,\n      children: [mnemonic && renderHTML(mnemonic.text), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: icon,\n        className: iconClass,\n        onClick: () => toggleEditing()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Mnemonic, \"pBycn1IX+DBIV7tZZXq+RL+ydR8=\");\n_c = Mnemonic;\nexport default Mnemonic;\nvar _c;\n$RefreshReg$(_c, \"Mnemonic\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","FontAwesomeIcon","faEdit","faFloppyDisk","renderHTML","updateKanji","KanjiContext","UserContext","jsxDEV","_jsxDEV","Mnemonic","_ref","_s","selectedKanji","kanji","setKanji","editing","setEditing","icon","setIcon","iconClass","setIconClass","mnemonic","setmnemonic","user","textDiv","mnemonicFound","find","x","username","hasOwnProperty","toggleEditing","current","focus","blur","updatedText","innerHTML","substring","indexOf","foundIndex","findIndex","text","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","suppressContentEditableWarning","ref","tabIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/components/Mnemonic.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\r\nimport renderHTML from 'react-render-html'\r\nimport { updateKanji } from '../hooks/updateKanji';\r\nimport { KanjiContext, UserContext } from '../App';\r\n\r\nconst Mnemonic = ({ selectedKanji }) => {\r\n    const { kanji, setKanji } = useContext(KanjiContext)\r\n    const [editing, setEditing] = useState(false)\r\n    const [icon, setIcon] = useState(faEdit)\r\n    const [iconClass, setIconClass] = useState(\"\")\r\n    const [mnemonic, setmnemonic] = useState(\"\")\r\n    const { user } = useContext(UserContext)\r\n    const textDiv = useRef(null)\r\n\r\n    // find the user's mnemonic to display\r\n    useEffect(() => {\r\n        let mnemonicFound = selectedKanji.mnemonic.find(x => x.username === user.username)\r\n        if (!mnemonicFound) {\r\n            mnemonicFound = selectedKanji.mnemonic.find(x => x.username === \"\" || !x.hasOwnProperty('username'))\r\n        }\r\n        setmnemonic(mnemonicFound)\r\n    }, [selectedKanji, user, setmnemonic])\r\n\r\n    // toggle between editing mode\r\n    const toggleEditing = () => {\r\n        // switch to edit mode\r\n        if (!editing) {\r\n            // animation class\r\n            setIconClass(\"fa-beat-fade\")\r\n            // change to save icon\r\n            setIcon(faFloppyDisk)\r\n            // focus on textarea\r\n            textDiv.current.focus()\r\n        }\r\n        // save updated mnemonic and switch to normal mode\r\n        else {\r\n            // remove animation class\r\n            setIconClass(\"\")\r\n            // switch to edit icon\r\n            setIcon(faEdit)\r\n            // remove focus \r\n            textDiv.current.blur()\r\n            // update the mnemonic and kanji data\r\n            const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"))\r\n            const foundIndex = selectedKanji.mnemonic.findIndex(x => x.username === user.username)\r\n            const mnemonic = {\r\n                text: updatedText,\r\n                username: user.username\r\n            }\r\n\r\n            if (foundIndex !== -1) {\r\n                selectedKanji.mnemonic[foundIndex] = mnemonic\r\n            }\r\n            else {\r\n                selectedKanji.mnemonic.push(mnemonic)\r\n            }\r\n            // send post request to database\r\n            updateKanji({ selectedKanji })\r\n        }\r\n\r\n        setEditing(!editing)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mnemonic\">\r\n            <p>How to remember:</p>\r\n            <div className=\"textDiv\" contentEditable={editing} suppressContentEditableWarning={true} ref={textDiv} tabIndex={0}>\r\n                {mnemonic && renderHTML(mnemonic.text)}\r\n                <FontAwesomeIcon icon={icon} className={iconClass} onClick={() => toggleEditing()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mnemonic"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}