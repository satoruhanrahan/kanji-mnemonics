{"ast":null,"code":"export const updateKanji = async _ref => {\n  let {\n    selectedKanji,\n    userId,\n    updatedText\n  } = _ref;\n  console.log(selectedKanji);\n  const foundIndex = selectedKanji.mnemonic.findIndex(x => x.user_id === userId);\n  const mnemonic = {\n    text: updatedText,\n    user_id: [userId]\n  };\n  if (foundIndex) {\n    selectedKanji.mnemonic[foundIndex] = mnemonic;\n  } else {\n    selectedKanji.mnemonic.push(mnemonic);\n  }\n  // console.log(selectedKanji)\n\n  let api = '/api/kanji/' + selectedKanji._id;\n  if (process.env.REACT_APP_NODE_ENV === 'development') {\n    api = 'http://localhost:' + process.env.REACT_APP_BACKEND_PORT + api;\n  }\n  const response = await fetch(api, {\n    method: 'POST',\n    body: JSON.stringify({\n      selectedKanji\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const json = await response.json();\n  // console.log(json)\n  return json;\n};","map":{"version":3,"names":["updateKanji","_ref","selectedKanji","userId","updatedText","console","log","foundIndex","mnemonic","findIndex","x","user_id","text","push","api","_id","process","env","REACT_APP_NODE_ENV","REACT_APP_BACKEND_PORT","response","fetch","method","body","JSON","stringify","headers","json"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/hooks/updateKanji.js"],"sourcesContent":["export const updateKanji = async ({ selectedKanji, userId, updatedText }) => {\r\n    console.log(selectedKanji)\r\n    const foundIndex = selectedKanji.mnemonic.findIndex(x => x.user_id === userId)\r\n    const mnemonic = {\r\n        text: updatedText,\r\n        user_id: [userId]\r\n    }\r\n\r\n    if (foundIndex) {\r\n        selectedKanji.mnemonic[foundIndex] = mnemonic\r\n    }\r\n    else {\r\n        selectedKanji.mnemonic.push(mnemonic)\r\n    }\r\n    // console.log(selectedKanji)\r\n\r\n    let api = '/api/kanji/' + selectedKanji._id;\r\n    if (process.env.REACT_APP_NODE_ENV === 'development') {\r\n        api = 'http://localhost:' + process.env.REACT_APP_BACKEND_PORT + api\r\n    }\r\n\r\n    const response = await fetch(api, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ selectedKanji }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    const json = await response.json()\r\n    // console.log(json)\r\n    return json\r\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAC,IAAA,IAAkD;EAAA,IAA3C;IAAEC,aAAa;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACpEI,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;EAC1B,MAAMK,UAAU,GAAGL,aAAa,CAACM,QAAQ,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKR,MAAM,CAAC;EAC9E,MAAMK,QAAQ,GAAG;IACbI,IAAI,EAAER,WAAW;IACjBO,OAAO,EAAE,CAACR,MAAM;EACpB,CAAC;EAED,IAAII,UAAU,EAAE;IACZL,aAAa,CAACM,QAAQ,CAACD,UAAU,CAAC,GAAGC,QAAQ;EACjD,CAAC,MACI;IACDN,aAAa,CAACM,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAAC;EACzC;EACA;;EAEA,IAAIM,GAAG,GAAG,aAAa,GAAGZ,aAAa,CAACa,GAAG;EAC3C,IAAIC,OAAO,CAACC,GAAG,CAACC,kBAAkB,KAAK,aAAa,EAAE;IAClDJ,GAAG,GAAG,mBAAmB,GAAGE,OAAO,CAACC,GAAG,CAACE,sBAAsB,GAAGL,GAAG;EACxE;EAEA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;IAC9BQ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEvB;IAAc,CAAC,CAAC;IACvCwB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC;EACA,OAAOA,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}