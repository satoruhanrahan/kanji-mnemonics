{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sator\\\\WebProjects\\\\kanjiMnemonics\\\\create-react-app\\\\src\\\\pages\\\\Kanji.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { KanjiContext } from \"../App\";\nimport { fetchKanji } from \"../hooks/fetchKanji\";\nimport KanjiDetails from '../components/KanjiDetails';\nimport DOMPurify from 'dompurify';\nimport renderHTML from 'react-render-html';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanji = () => {\n  _s();\n  // array of all kanji\n  const {\n    kanji,\n    setKanji\n  } = useContext(KanjiContext);\n  // selected kanji\n  const [selectedKanji, setSelectedKanji] = useState();\n  // id of selected kanji\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    let kanjiFound = false;\n    // fetch kanji if not fetched\n    if (!kanji) {\n      fetchKanji().then(json => {\n        setKanji(json);\n        // find selected kanji by ID\n        kanjiFound = json.find(x => x._id === id);\n        setSelectedKanji(kanjiFound);\n        kanji.foreach((element, index) => {\n          kanji[index].mnemonic = DOMPurify.sanitize(kanji[index].mnemonic);\n        });\n      });\n    }\n    // if kanji exists\n    else {\n      // find selected kanji by ID\n      kanjiFound = kanji.find(x => x._id === id);\n      setSelectedKanji(kanjiFound);\n      kanji.foreach((element, index) => {\n        kanji[index].mnemonic = DOMPurify.sanitize(kanji[index].mnemonic);\n      });\n    }\n  }, [id, kanji, setKanji, setSelectedKanji]);\n\n  // function sanitizeMnemonicData(kanji) {\n  //     kanji.foreach((element, index) => {\n  //         kanji[index].mnemonic = DOMPurify.sanitize(kanji[index].mnemonic)\n  //     })\n  // }\n\n  // next button\n  function nextKanji() {\n    let nextKanjiID = \"\";\n    // get the index of selected kanji within array of all kanji\n    const selectedKanjiIndex = kanji.findIndex(x => x === selectedKanji);\n    // if selected kanji is the last in array\n    if (selectedKanjiIndex === kanji.length - 1) {\n      // get the first kanji in array\n      nextKanjiID = kanji[0]._id;\n    }\n    // get the next kanji id\n    else {\n      nextKanjiID = kanji[selectedKanjiIndex + 1]._id;\n    }\n    navigate(\"/\" + nextKanjiID);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Kanji\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"backButton\",\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: () => nextKanji(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character\",\n      children: selectedKanji && selectedKanji.character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), selectedKanji && /*#__PURE__*/_jsxDEV(KanjiDetails, {\n      kanji: selectedKanji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mnemonic\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"How to remember:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mnemonicText\",\n        children: selectedKanji && renderHTML(selectedKanji.mnemonic)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Kanji, \"sfTvFc2EcYDBHQghAaqcP7ubBqs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Kanji;\nexport default Kanji;\nvar _c;\n$RefreshReg$(_c, \"Kanji\");","map":{"version":3,"names":["useEffect","useState","useContext","useParams","useNavigate","KanjiContext","fetchKanji","KanjiDetails","DOMPurify","renderHTML","jsxDEV","_jsxDEV","Kanji","_s","kanji","setKanji","selectedKanji","setSelectedKanji","id","navigate","kanjiFound","then","json","find","x","_id","foreach","element","index","mnemonic","sanitize","nextKanji","nextKanjiID","selectedKanjiIndex","findIndex","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","character","_c","$RefreshReg$"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/pages/Kanji.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { KanjiContext } from \"../App\"\r\nimport { fetchKanji } from \"../hooks/fetchKanji\"\r\nimport KanjiDetails from '../components/KanjiDetails'\r\nimport DOMPurify from 'dompurify'\r\nimport renderHTML from 'react-render-html'\r\n\r\nconst Kanji = () => {\r\n    // array of all kanji\r\n    const { kanji, setKanji } = useContext(KanjiContext)\r\n    // selected kanji\r\n    const [selectedKanji, setSelectedKanji] = useState()\r\n    // id of selected kanji\r\n    const { id } = useParams()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let kanjiFound = false;\r\n        // fetch kanji if not fetched\r\n        if (!kanji) {\r\n            fetchKanji().then((json) => {\r\n                setKanji(json)\r\n                // find selected kanji by ID\r\n                kanjiFound = json.find(x => x._id === id)\r\n                setSelectedKanji(kanjiFound)\r\n                kanji.foreach((element, index) => {\r\n                    kanji[index].mnemonic = DOMPurify.sanitize(kanji[index].mnemonic)\r\n                })\r\n            })\r\n        }\r\n        // if kanji exists\r\n        else {\r\n            // find selected kanji by ID\r\n            kanjiFound = kanji.find(x => x._id === id)\r\n            setSelectedKanji(kanjiFound)\r\n            kanji.foreach((element, index) => {\r\n                kanji[index].mnemonic = DOMPurify.sanitize(kanji[index].mnemonic)\r\n            })\r\n        }\r\n    }, [id, kanji, setKanji, setSelectedKanji])\r\n\r\n    // function sanitizeMnemonicData(kanji) {\r\n    //     kanji.foreach((element, index) => {\r\n    //         kanji[index].mnemonic = DOMPurify.sanitize(kanji[index].mnemonic)\r\n    //     })\r\n    // }\r\n\r\n    // next button\r\n    function nextKanji() {\r\n        let nextKanjiID = \"\"\r\n        // get the index of selected kanji within array of all kanji\r\n        const selectedKanjiIndex = kanji.findIndex(x => x === selectedKanji)\r\n        // if selected kanji is the last in array\r\n        if (selectedKanjiIndex === kanji.length - 1) {\r\n            // get the first kanji in array\r\n            nextKanjiID = kanji[0]._id\r\n        }\r\n        // get the next kanji id\r\n        else {\r\n            nextKanjiID = kanji[selectedKanjiIndex + 1]._id\r\n        }\r\n\r\n        navigate(\"/\" + nextKanjiID);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Kanji\">\r\n            <button className=\"backButton\" onClick={() => navigate(-1)}>Back</button>\r\n            <button className=\"nextButton\" onClick={() => nextKanji()}>Next</button>\r\n            <div className=\"character\">{selectedKanji && selectedKanji.character}</div>\r\n            {selectedKanji && <KanjiDetails kanji={selectedKanji} />}\r\n\r\n            <div className=\"mnemonic\">\r\n                <p>How to remember:</p>\r\n                <div className=\"mnemonicText\">{selectedKanji && renderHTML(selectedKanji.mnemonic)}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Kanji"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}