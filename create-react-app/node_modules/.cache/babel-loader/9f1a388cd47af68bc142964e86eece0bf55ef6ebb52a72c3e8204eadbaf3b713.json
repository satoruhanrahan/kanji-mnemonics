{"ast":null,"code":"'use strict';\n\nvar WritableStream = require('stream').Writable,\n  inherits = require('util').inherits,\n  Parser = require('./index');\nvar ParserStream = module.exports = function (options) {\n  WritableStream.call(this);\n  this.parser = new Parser(options);\n  this.lastChunkWritten = false;\n  this.writeCallback = null;\n  this.pausedByScript = false;\n  this.document = this.parser.treeAdapter.createDocument();\n  this.pendingHtmlInsertions = [];\n  this._resume = this._resume.bind(this);\n  this._documentWrite = this._documentWrite.bind(this);\n  this._scriptHandler = this._scriptHandler.bind(this);\n  this.parser._bootstrap(this.document, null);\n};\ninherits(ParserStream, WritableStream);\n\n//WritableStream implementation\nParserStream.prototype._write = function (chunk, encoding, callback) {\n  this.writeCallback = callback;\n  this.parser.tokenizer.write(chunk.toString('utf8'), this.lastChunkWritten);\n  this._runParsingLoop();\n};\nParserStream.prototype.end = function (chunk, encoding, callback) {\n  this.lastChunkWritten = true;\n  WritableStream.prototype.end.call(this, chunk || '', encoding, callback);\n};\n\n//Scriptable parser implementation\nParserStream.prototype._runParsingLoop = function () {\n  this.parser.runParsingLoopForCurrentChunk(this.writeCallback, this._scriptHandler);\n};\nParserStream.prototype._resume = function () {\n  if (!this.pausedByScript) throw new Error('Parser was already resumed');\n  while (this.pendingHtmlInsertions.length) {\n    var html = this.pendingHtmlInsertions.pop();\n    this.parser.tokenizer.insertHtmlAtCurrentPos(html);\n  }\n  this.pausedByScript = false;\n\n  //NOTE: keep parsing if we don't wait for the next input chunk\n  if (this.parser.tokenizer.active) this._runParsingLoop();\n};\nParserStream.prototype._documentWrite = function (html) {\n  if (!this.parser.stopped) this.pendingHtmlInsertions.push(html);\n};\nParserStream.prototype._scriptHandler = function (scriptElement) {\n  if (this.listeners('script').length) {\n    this.pausedByScript = true;\n    this.emit('script', scriptElement, this._documentWrite, this._resume);\n  } else this._runParsingLoop();\n};","map":{"version":3,"names":["WritableStream","require","Writable","inherits","Parser","ParserStream","module","exports","options","call","parser","lastChunkWritten","writeCallback","pausedByScript","document","treeAdapter","createDocument","pendingHtmlInsertions","_resume","bind","_documentWrite","_scriptHandler","_bootstrap","prototype","_write","chunk","encoding","callback","tokenizer","write","toString","_runParsingLoop","end","runParsingLoopForCurrentChunk","Error","length","html","pop","insertHtmlAtCurrentPos","active","stopped","push","scriptElement","listeners","emit"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/node_modules/react-render-html/node_modules/parse5/lib/parser/parser_stream.js"],"sourcesContent":["'use strict';\n\nvar WritableStream = require('stream').Writable,\n    inherits = require('util').inherits,\n    Parser = require('./index');\n\nvar ParserStream = module.exports = function (options) {\n    WritableStream.call(this);\n\n    this.parser = new Parser(options);\n\n    this.lastChunkWritten = false;\n    this.writeCallback = null;\n    this.pausedByScript = false;\n\n    this.document = this.parser.treeAdapter.createDocument();\n\n    this.pendingHtmlInsertions = [];\n\n    this._resume = this._resume.bind(this);\n    this._documentWrite = this._documentWrite.bind(this);\n    this._scriptHandler = this._scriptHandler.bind(this);\n\n    this.parser._bootstrap(this.document, null);\n};\n\ninherits(ParserStream, WritableStream);\n\n//WritableStream implementation\nParserStream.prototype._write = function (chunk, encoding, callback) {\n    this.writeCallback = callback;\n    this.parser.tokenizer.write(chunk.toString('utf8'), this.lastChunkWritten);\n    this._runParsingLoop();\n};\n\nParserStream.prototype.end = function (chunk, encoding, callback) {\n    this.lastChunkWritten = true;\n    WritableStream.prototype.end.call(this, chunk || '', encoding, callback);\n};\n\n//Scriptable parser implementation\nParserStream.prototype._runParsingLoop = function () {\n    this.parser.runParsingLoopForCurrentChunk(this.writeCallback, this._scriptHandler);\n};\n\nParserStream.prototype._resume = function () {\n    if (!this.pausedByScript)\n        throw new Error('Parser was already resumed');\n\n    while (this.pendingHtmlInsertions.length) {\n        var html = this.pendingHtmlInsertions.pop();\n\n        this.parser.tokenizer.insertHtmlAtCurrentPos(html);\n    }\n\n    this.pausedByScript = false;\n\n    //NOTE: keep parsing if we don't wait for the next input chunk\n    if (this.parser.tokenizer.active)\n        this._runParsingLoop();\n};\n\nParserStream.prototype._documentWrite = function (html) {\n    if (!this.parser.stopped)\n        this.pendingHtmlInsertions.push(html);\n};\n\nParserStream.prototype._scriptHandler = function (scriptElement) {\n    if (this.listeners('script').length) {\n        this.pausedByScript = true;\n        this.emit('script', scriptElement, this._documentWrite, this._resume);\n    }\n    else\n        this._runParsingLoop();\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}