{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sator\\\\WebProjects\\\\kanjiMnemonics\\\\create-react-app\\\\src\\\\components\\\\Mnemonic.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\nimport renderHTML from 'react-render-html';\nimport { updateKanji } from '../hooks/updateKanji';\nimport { KanjiContext, UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mnemonic = _ref => {\n  _s();\n  let {\n    kanji\n  } = _ref;\n  const [allKanji, setAllKanji] = useContext(KanjiContext);\n  const [editing, setEditing] = useState(false);\n  const [icon, setIcon] = useState(faEdit);\n  const [iconClass, setIconClass] = useState(\"\");\n  // const [mnemonic, setmnemonic] = useState(\"\")\n  // const { user } = useContext(UserContext)\n  // const userId = user._id\n  // const textDiv = useRef(null)\n\n  // useEffect(() => {\n  //     let mnemonicFound = kanji.mnemonic.find(x => x.user_id === userId)\n  //     if (!mnemonicFound) {\n  //         mnemonicFound = kanji.mnemonic.find(x => x.user_id.length === 0)\n  //     }\n  //     setmnemonic(mnemonicFound)\n  // }, [kanji, userId, setmnemonic])\n\n  // const toggleEditing = () => {\n  //     if (!editing) {\n  //         setIconClass(\"fa-beat-fade\")\n  //         setIcon(faFloppyDisk)\n  //         textDiv.current.focus()\n  //     }\n  //     else {\n  //         setIconClass(\"\")\n  //         setIcon(faEdit)\n  //         textDiv.current.blur()\n  //         const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"))\n  //         const updatedKanji = updateKanji({ kanji, userId, updatedText })\n\n  //         const indexFound = allKanji.findIndex(x => x._id === updateKanji._id)\n  //         allKanji[indexFound] = updatedKanji\n  //         setAllKanji(allKanji)\n  //     }\n\n  //     setEditing(!editing)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mnemonic\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How to remember:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Mnemonic, \"Uzude5FwSH+Pdpeu1Rb9u4w2l/Q=\");\n_c = Mnemonic;\nexport default Mnemonic;\nvar _c;\n$RefreshReg$(_c, \"Mnemonic\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","FontAwesomeIcon","faEdit","faFloppyDisk","renderHTML","updateKanji","KanjiContext","UserContext","jsxDEV","_jsxDEV","Mnemonic","_ref","_s","kanji","allKanji","setAllKanji","editing","setEditing","icon","setIcon","iconClass","setIconClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/components/Mnemonic.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFloppyDisk } from '@fortawesome/free-solid-svg-icons';\r\nimport renderHTML from 'react-render-html'\r\nimport { updateKanji } from '../hooks/updateKanji';\r\nimport { KanjiContext, UserContext } from '../App';\r\n\r\nconst Mnemonic = ({ kanji }) => {\r\n    const [allKanji, setAllKanji] = useContext(KanjiContext)\r\n    const [editing, setEditing] = useState(false)\r\n    const [icon, setIcon] = useState(faEdit)\r\n    const [iconClass, setIconClass] = useState(\"\")\r\n    // const [mnemonic, setmnemonic] = useState(\"\")\r\n    // const { user } = useContext(UserContext)\r\n    // const userId = user._id\r\n    // const textDiv = useRef(null)\r\n\r\n    // useEffect(() => {\r\n    //     let mnemonicFound = kanji.mnemonic.find(x => x.user_id === userId)\r\n    //     if (!mnemonicFound) {\r\n    //         mnemonicFound = kanji.mnemonic.find(x => x.user_id.length === 0)\r\n    //     }\r\n    //     setmnemonic(mnemonicFound)\r\n    // }, [kanji, userId, setmnemonic])\r\n\r\n    // const toggleEditing = () => {\r\n    //     if (!editing) {\r\n    //         setIconClass(\"fa-beat-fade\")\r\n    //         setIcon(faFloppyDisk)\r\n    //         textDiv.current.focus()\r\n    //     }\r\n    //     else {\r\n    //         setIconClass(\"\")\r\n    //         setIcon(faEdit)\r\n    //         textDiv.current.blur()\r\n    //         const updatedText = textDiv.current.innerHTML.substring(0, textDiv.current.innerHTML.indexOf(\"<svg\"))\r\n    //         const updatedKanji = updateKanji({ kanji, userId, updatedText })\r\n\r\n    //         const indexFound = allKanji.findIndex(x => x._id === updateKanji._id)\r\n    //         allKanji[indexFound] = updatedKanji\r\n    //         setAllKanji(allKanji)\r\n    //     }\r\n\r\n    //     setEditing(!editing)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"mnemonic\">\r\n            <p>How to remember:</p>\r\n            {/* <div className=\"textDiv\" contentEditable={editing} suppressContentEditableWarning={true} ref={textDiv} tabIndex={0}> */}\r\n            {/* {mnemonic && renderHTML(mnemonic.text)} */}\r\n            {/* <FontAwesomeIcon icon={icon} className={iconClass} onClick={() => toggleEditing()} /> */}\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mnemonic"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,EAAEC,YAAY,QAAQ,mCAAmC;AACxE,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,YAAY,EAAEC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACvB,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,UAAU,CAACO,YAAY,CAAC;EACxD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAACK,MAAM,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACIY,OAAA;IAAKa,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBd,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKtB,CAAC;AAEd,CAAC;AAAAf,EAAA,CAhDKF,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAkDd,eAAeA,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}