{"ast":null,"code":"import _slicedToArray from\"C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState,useContext}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{UserContext}from\"../App\";import{KanjiContext}from\"../App\";import{fetchKanji}from\"../hooks/fetchKanji\";import KanjiDetails from'../components/KanjiDetails';import renderHTML from'react-render-html';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Kanji=function Kanji(){// user context\nvar _useContext=useContext(UserContext),user=_useContext.user;// array of all kanji\nvar _useContext2=useContext(KanjiContext),kanji=_useContext2.kanji,setKanji=_useContext2.setKanji;// selected kanji\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedKanji=_useState2[0],setSelectedKanji=_useState2[1];// id of selected kanji\nvar _useParams=useParams(),id=_useParams.id;// mnemonic to display\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),mnemonic=_useState4[0],setMnemonic=_useState4[1];var navigate=useNavigate();useEffect(function(){var kanjiFound=false;// fetch kanji if not fetched\nif(!kanji){fetchKanji().then(function(json){setKanji(json);// find selected kanji by ID\nkanjiFound=json.find(function(x){return x._id===id;});setSelectedKanji(kanjiFound);});}// if kanji exists\nelse{// find selected kanji by ID\nkanjiFound=kanji.find(function(x){return x._id===id;});setSelectedKanji(kanjiFound);// if logged in, find user's mnemonic\nvar mnemonicFound;if(user){mnemonicFound=kanjiFound.mnemonic.find(function(x){return x.user_id.includes(user._id);});}// if user's mnemonic not found, get the default mnemonic\nif(!mnemonicFound){mnemonicFound=kanjiFound.mnemonic.find(function(x){return x.user_id.length===0;});}setMnemonic(mnemonicFound);}},[id,kanji,setKanji,setSelectedKanji,user]);// next button\nfunction nextKanji(){var nextKanjiID=\"\";// get the index of selected kanji within array of all kanji\nvar selectedKanjiIndex=kanji.findIndex(function(x){return x===selectedKanji;});// if selected kanji is the last in array\nif(selectedKanjiIndex===kanji.length-1){// get the first kanji in array\nnextKanjiID=kanji[0]._id;}// get the next kanji id\nelse{nextKanjiID=kanji[selectedKanjiIndex+1]._id;}navigate(\"/\"+nextKanjiID);}return/*#__PURE__*/_jsxs(\"div\",{className:\"Kanji\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"backButton\",onClick:function onClick(){return navigate(-1);},children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"nextButton\",onClick:function onClick(){return nextKanji();},children:\"Next\"}),/*#__PURE__*/_jsx(\"div\",{className:\"character\",children:selectedKanji&&selectedKanji.character}),selectedKanji&&/*#__PURE__*/_jsx(KanjiDetails,{kanji:selectedKanji}),/*#__PURE__*/_jsxs(\"div\",{className:\"mnemonic\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"How to remember:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mnemonicText\",children:selectedKanji&&renderHTML(mnemonic.text)})]})]});};export default Kanji;","map":{"version":3,"names":["useEffect","useState","useContext","useParams","useNavigate","UserContext","KanjiContext","fetchKanji","KanjiDetails","renderHTML","jsx","_jsx","jsxs","_jsxs","Kanji","_useContext","user","_useContext2","kanji","setKanji","_useState","_useState2","_slicedToArray","selectedKanji","setSelectedKanji","_useParams","id","_useState3","_useState4","mnemonic","setMnemonic","navigate","kanjiFound","then","json","find","x","_id","mnemonicFound","user_id","includes","length","nextKanji","nextKanjiID","selectedKanjiIndex","findIndex","className","children","onClick","character","text"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/src/pages/Kanji.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\"\r\nimport { KanjiContext } from \"../App\"\r\nimport { fetchKanji } from \"../hooks/fetchKanji\"\r\nimport KanjiDetails from '../components/KanjiDetails'\r\nimport renderHTML from 'react-render-html'\r\n\r\nconst Kanji = () => {\r\n    // user context\r\n    const { user } = useContext(UserContext)\r\n    // array of all kanji\r\n    const { kanji, setKanji } = useContext(KanjiContext)\r\n    // selected kanji\r\n    const [selectedKanji, setSelectedKanji] = useState()\r\n    // id of selected kanji\r\n    const { id } = useParams()\r\n    // mnemonic to display\r\n    const [mnemonic, setMnemonic] = useState()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let kanjiFound = false;\r\n        // fetch kanji if not fetched\r\n        if (!kanji) {\r\n            fetchKanji().then((json) => {\r\n                setKanji(json)\r\n                // find selected kanji by ID\r\n                kanjiFound = json.find(x => x._id === id)\r\n                setSelectedKanji(kanjiFound)\r\n            })\r\n        }\r\n        // if kanji exists\r\n        else {\r\n            // find selected kanji by ID\r\n            kanjiFound = kanji.find(x => x._id === id)\r\n            setSelectedKanji(kanjiFound)\r\n            // if logged in, find user's mnemonic\r\n            let mnemonicFound;\r\n\r\n            if (user) {\r\n                mnemonicFound = kanjiFound.mnemonic.find(x => x.user_id.includes(user._id))\r\n            }\r\n            // if user's mnemonic not found, get the default mnemonic\r\n            if (!mnemonicFound) {\r\n                mnemonicFound = kanjiFound.mnemonic.find(x => x.user_id.length === 0)\r\n            }\r\n            setMnemonic(mnemonicFound)\r\n\r\n        }\r\n    }, [id, kanji, setKanji, setSelectedKanji, user])\r\n\r\n    // next button\r\n    function nextKanji() {\r\n        let nextKanjiID = \"\"\r\n        // get the index of selected kanji within array of all kanji\r\n        const selectedKanjiIndex = kanji.findIndex(x => x === selectedKanji)\r\n        // if selected kanji is the last in array\r\n        if (selectedKanjiIndex === kanji.length - 1) {\r\n            // get the first kanji in array\r\n            nextKanjiID = kanji[0]._id\r\n        }\r\n        // get the next kanji id\r\n        else {\r\n            nextKanjiID = kanji[selectedKanjiIndex + 1]._id\r\n        }\r\n\r\n        navigate(\"/\" + nextKanjiID);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Kanji\">\r\n            <button className=\"backButton\" onClick={() => navigate(-1)}>Back</button>\r\n            <button className=\"nextButton\" onClick={() => nextKanji()}>Next</button>\r\n            <div className=\"character\">{selectedKanji && selectedKanji.character}</div>\r\n            {selectedKanji && <KanjiDetails kanji={selectedKanji} />}\r\n\r\n            <div className=\"mnemonic\">\r\n                <p>How to remember:</p>\r\n                <div className=\"mnemonicText\">{selectedKanji && renderHTML(mnemonic.text)}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Kanji"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}