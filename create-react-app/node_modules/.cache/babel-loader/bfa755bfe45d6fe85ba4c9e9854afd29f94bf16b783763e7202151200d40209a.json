{"ast":null,"code":"'use strict';\n\nvar Preprocessor = require('./preprocessor'),\n  UNICODE = require('../common/unicode'),\n  neTree = require('./named_entity_data');\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS,\n  $$ = UNICODE.CODE_POINT_SEQUENCES;\n\n//Replacement code points for numeric entities\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n  0x00: 0xFFFD,\n  0x0D: 0x000D,\n  0x80: 0x20AC,\n  0x81: 0x0081,\n  0x82: 0x201A,\n  0x83: 0x0192,\n  0x84: 0x201E,\n  0x85: 0x2026,\n  0x86: 0x2020,\n  0x87: 0x2021,\n  0x88: 0x02C6,\n  0x89: 0x2030,\n  0x8A: 0x0160,\n  0x8B: 0x2039,\n  0x8C: 0x0152,\n  0x8D: 0x008D,\n  0x8E: 0x017D,\n  0x8F: 0x008F,\n  0x90: 0x0090,\n  0x91: 0x2018,\n  0x92: 0x2019,\n  0x93: 0x201C,\n  0x94: 0x201D,\n  0x95: 0x2022,\n  0x96: 0x2013,\n  0x97: 0x2014,\n  0x98: 0x02DC,\n  0x99: 0x2122,\n  0x9A: 0x0161,\n  0x9B: 0x203A,\n  0x9C: 0x0153,\n  0x9D: 0x009D,\n  0x9E: 0x017E,\n  0x9F: 0x0178\n};\n\n// Named entity tree flags\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n//States\nvar DATA_STATE = 'DATA_STATE',\n  CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n  RCDATA_STATE = 'RCDATA_STATE',\n  CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n  RAWTEXT_STATE = 'RAWTEXT_STATE',\n  SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n  PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n  TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n  END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n  TAG_NAME_STATE = 'TAG_NAME_STATE',\n  RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n  RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n  RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n  RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n  RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n  RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n  SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n  SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n  SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n  SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n  SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n  SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n  SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n  SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n  SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n  SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n  SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n  SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n  SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n  SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n  SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n  SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n  SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n  BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n  ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n  AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n  BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n  ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n  ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n  ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n  CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n  AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n  SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n  BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n  BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n  MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n  COMMENT_START_STATE = 'COMMENT_START_STATE',\n  COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n  COMMENT_STATE = 'COMMENT_STATE',\n  COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n  COMMENT_END_STATE = 'COMMENT_END_STATE',\n  COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n  DOCTYPE_STATE = 'DOCTYPE_STATE',\n  DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n  AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n  BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n  DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n  DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n  BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n  BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n  DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n  DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n  AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n  BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n  CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n  return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isAsciiDigit(cp) {\n  return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n  return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n  return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isDigit(cp, isHex) {\n  return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F || cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\nfunction isReservedCodePoint(cp) {\n  return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\nfunction toAsciiLowerCodePoint(cp) {\n  return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n  if (cp <= 0xFFFF) return String.fromCharCode(cp);\n  cp -= 0x10000;\n  return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\nfunction toAsciiLowerChar(cp) {\n  return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n  var branchCount = neTree[++nodeIx],\n    lo = ++nodeIx,\n    hi = lo + branchCount - 1;\n  while (lo <= hi) {\n    var mid = lo + hi >>> 1,\n      midCp = neTree[mid];\n    if (midCp < cp) lo = mid + 1;else if (midCp > cp) hi = mid - 1;else return neTree[mid + branchCount];\n  }\n  return -1;\n}\n\n//Tokenizer\nvar Tokenizer = module.exports = function () {\n  this.preprocessor = new Preprocessor();\n  this.tokenQueue = [];\n  this.allowCDATA = false;\n  this.state = DATA_STATE;\n  this.returnState = '';\n  this.tempBuff = [];\n  this.additionalAllowedCp = void 0;\n  this.lastStartTagName = '';\n  this.consumedAfterSnapshot = -1;\n  this.active = false;\n  this.currentCharacterToken = null;\n  this.currentToken = null;\n  this.currentAttr = null;\n};\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n  DATA: DATA_STATE,\n  RCDATA: RCDATA_STATE,\n  RAWTEXT: RAWTEXT_STATE,\n  SCRIPT_DATA: SCRIPT_DATA_STATE,\n  PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function (token, attrName) {\n  for (var i = token.attrs.length - 1; i >= 0; i--) {\n    if (token.attrs[i].name === attrName) return token.attrs[i].value;\n  }\n  return null;\n};\n\n//API\nTokenizer.prototype.getNextToken = function () {\n  while (!this.tokenQueue.length && this.active) {\n    this._hibernationSnapshot();\n    var cp = this._consume();\n    if (!this._ensureHibernation()) this[this.state](cp);\n  }\n  return this.tokenQueue.shift();\n};\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n  this.active = true;\n  this.preprocessor.write(chunk, isLastChunk);\n};\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n  this.active = true;\n  this.preprocessor.insertHtmlAtCurrentPos(chunk);\n};\n\n//Hibernation\nTokenizer.prototype._hibernationSnapshot = function () {\n  this.consumedAfterSnapshot = 0;\n};\nTokenizer.prototype._ensureHibernation = function () {\n  if (this.preprocessor.endOfChunkHit) {\n    for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) this.preprocessor.retreat();\n    this.active = false;\n    this.tokenQueue.push({\n      type: Tokenizer.HIBERNATION_TOKEN\n    });\n    return true;\n  }\n  return false;\n};\n\n//Consumption\nTokenizer.prototype._consume = function () {\n  this.consumedAfterSnapshot++;\n  return this.preprocessor.advance();\n};\nTokenizer.prototype._unconsume = function () {\n  this.consumedAfterSnapshot--;\n  this.preprocessor.retreat();\n};\nTokenizer.prototype._unconsumeSeveral = function (count) {\n  while (count--) this._unconsume();\n};\nTokenizer.prototype._reconsumeInState = function (state) {\n  this.state = state;\n  this._unconsume();\n};\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n  var consumedCount = 0,\n    isMatch = true,\n    patternLength = pattern.length,\n    patternPos = 0,\n    cp = startCp,\n    patternCp = void 0;\n  for (; patternPos < patternLength; patternPos++) {\n    if (patternPos > 0) {\n      cp = this._consume();\n      consumedCount++;\n    }\n    if (cp === $.EOF) {\n      isMatch = false;\n      break;\n    }\n    patternCp = pattern[patternPos];\n    if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n      isMatch = false;\n      break;\n    }\n  }\n  if (!isMatch) this._unconsumeSeveral(consumedCount);\n  return isMatch;\n};\n\n//Lookahead\nTokenizer.prototype._lookahead = function () {\n  var cp = this._consume();\n  this._unconsume();\n  return cp;\n};\n\n//Temp buffer\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n  if (this.tempBuff.length !== $$.SCRIPT_STRING.length) return false;\n  for (var i = 0; i < this.tempBuff.length; i++) {\n    if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) return false;\n  }\n  return true;\n};\n\n//Token creation\nTokenizer.prototype._createStartTagToken = function () {\n  this.currentToken = {\n    type: Tokenizer.START_TAG_TOKEN,\n    tagName: '',\n    selfClosing: false,\n    attrs: []\n  };\n};\nTokenizer.prototype._createEndTagToken = function () {\n  this.currentToken = {\n    type: Tokenizer.END_TAG_TOKEN,\n    tagName: '',\n    attrs: []\n  };\n};\nTokenizer.prototype._createCommentToken = function () {\n  this.currentToken = {\n    type: Tokenizer.COMMENT_TOKEN,\n    data: ''\n  };\n};\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n  this.currentToken = {\n    type: Tokenizer.DOCTYPE_TOKEN,\n    name: initialName,\n    forceQuirks: false,\n    publicId: null,\n    systemId: null\n  };\n};\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n  this.currentCharacterToken = {\n    type: type,\n    chars: ch\n  };\n};\n\n//Tag attributes\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n  this.currentAttr = {\n    name: attrNameFirstCh,\n    value: ''\n  };\n};\nTokenizer.prototype._isDuplicateAttr = function () {\n  return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\nTokenizer.prototype._leaveAttrName = function (toState) {\n  this.state = toState;\n  if (!this._isDuplicateAttr()) this.currentToken.attrs.push(this.currentAttr);\n};\nTokenizer.prototype._leaveAttrValue = function (toState) {\n  this.state = toState;\n};\n\n//Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n  return this.lastStartTagName === this.currentToken.tagName;\n};\n\n//Token emission\nTokenizer.prototype._emitCurrentToken = function () {\n  this._emitCurrentCharacterToken();\n\n  //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n  if (this.currentToken.type === Tokenizer.START_TAG_TOKEN) this.lastStartTagName = this.currentToken.tagName;\n  this.tokenQueue.push(this.currentToken);\n  this.currentToken = null;\n};\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n  if (this.currentCharacterToken) {\n    this.tokenQueue.push(this.currentCharacterToken);\n    this.currentCharacterToken = null;\n  }\n};\nTokenizer.prototype._emitEOFToken = function () {\n  this._emitCurrentCharacterToken();\n  this.tokenQueue.push({\n    type: Tokenizer.EOF_TOKEN\n  });\n};\n\n//Characters emission\n\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n  if (this.currentCharacterToken && this.currentCharacterToken.type !== type) this._emitCurrentCharacterToken();\n  if (this.currentCharacterToken) this.currentCharacterToken.chars += ch;else this._createCharacterToken(type, ch);\n};\nTokenizer.prototype._emitCodePoint = function (cp) {\n  var type = Tokenizer.CHARACTER_TOKEN;\n  if (isWhitespace(cp)) type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;else if (cp === $.NULL) type = Tokenizer.NULL_CHARACTER_TOKEN;\n  this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n  for (var i = 0; i < codePoints.length; i++) this._emitCodePoint(codePoints[i]);\n};\n\n//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\nTokenizer.prototype._emitChar = function (ch) {\n  this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n};\n\n//Character reference tokenization\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n  var digits = '',\n    nextCp = void 0;\n  do {\n    digits += toChar(this._consume());\n    nextCp = this._lookahead();\n  } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n  if (this._lookahead() === $.SEMICOLON) this._consume();\n  var referencedCp = parseInt(digits, isHex ? 16 : 10),\n    replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n  if (replacement) return replacement;\n  if (isReservedCodePoint(referencedCp)) return $.REPLACEMENT_CHARACTER;\n  return referencedCp;\n};\n\n// NOTE: for the details on this algorithm see\n// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n  var referencedCodePoints = null,\n    referenceSize = 0,\n    cp = null,\n    consumedCount = 0,\n    semicolonTerminated = false;\n  for (var i = 0; i > -1;) {\n    var current = neTree[i],\n      inNode = current < MAX_BRANCH_MARKER_VALUE,\n      nodeWithData = inNode && current & HAS_DATA_FLAG;\n    if (nodeWithData) {\n      referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n      referenceSize = consumedCount;\n      if (cp === $.SEMICOLON) {\n        semicolonTerminated = true;\n        break;\n      }\n    }\n    cp = this._consume();\n    consumedCount++;\n    if (cp === $.EOF) break;\n    if (inNode) i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;else i = cp === current ? ++i : -1;\n  }\n  if (referencedCodePoints) {\n    if (!semicolonTerminated) {\n      //NOTE: unconsume excess (e.g. 'it' in '&notit')\n      this._unconsumeSeveral(consumedCount - referenceSize);\n\n      //NOTE: If the character reference is being consumed as part of an attribute and the next character\n      //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n      //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n      //unconsumed, and nothing is returned.\n      //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n      //parse error, because some legacy user agents will misinterpret the markup in those cases.\n      //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n      if (inAttr) {\n        var nextCp = this._lookahead();\n        if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n          this._unconsumeSeveral(referenceSize);\n          return null;\n        }\n      }\n    }\n    return referencedCodePoints;\n  }\n  this._unconsumeSeveral(consumedCount);\n  return null;\n};\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n  if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN || startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n    //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n    this._unconsume();\n    return null;\n  }\n  if (startCp === $.NUMBER_SIGN) {\n    //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n    var isHex = false,\n      nextCp = this._lookahead();\n    if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n      this._consume();\n      isHex = true;\n    }\n    nextCp = this._lookahead();\n\n    //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n    if (nextCp !== $.EOF && isDigit(nextCp, isHex)) return [this._consumeNumericEntity(isHex)];\n\n    //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n    //and the 'x'-character if appropriate.\n    this._unconsumeSeveral(isHex ? 2 : 1);\n    return null;\n  }\n  this._unconsume();\n  return this._consumeNamedEntity(inAttr);\n};\n\n//State machine\nvar _ = Tokenizer.prototype;\n\n//12.2.4.1 Data state\n//------------------------------------------------------------------\n_[DATA_STATE] = function dataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_DATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = TAG_OPEN_STATE;else if (cp === $.NULL) this._emitCodePoint(cp);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n//12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n  this.additionalAllowedCp = void 0;\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n    this.state = DATA_STATE;\n  }\n};\n\n//12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n_[RCDATA_STATE] = function rcdataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = RCDATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n//12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n  this.additionalAllowedCp = void 0;\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n    this.state = RCDATA_STATE;\n  }\n};\n\n//12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.LESS_THAN_SIGN) this.state = RAWTEXT_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n//12.2.4.6 Script data state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n//12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n//12.2.4.8 Tag open state\n//------------------------------------------------------------------\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n  if (cp === $.EXCLAMATION_MARK) this.state = MARKUP_DECLARATION_OPEN_STATE;else if (cp === $.SOLIDUS) this.state = END_TAG_OPEN_STATE;else if (isAsciiLetter(cp)) {\n    this._createStartTagToken();\n    this._reconsumeInState(TAG_NAME_STATE);\n  } else if (cp === $.QUESTION_MARK) this._reconsumeInState(BOGUS_COMMENT_STATE);else {\n    this._emitChar('<');\n    this._reconsumeInState(DATA_STATE);\n  }\n};\n\n//12.2.4.9 End tag open state\n//------------------------------------------------------------------\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n    this._reconsumeInState(TAG_NAME_STATE);\n  } else if (cp === $.GREATER_THAN_SIGN) this.state = DATA_STATE;else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n    this._emitChar('<');\n    this._emitChar('/');\n  } else this._reconsumeInState(BOGUS_COMMENT_STATE);\n};\n\n//12.2.4.10 Tag name state\n//------------------------------------------------------------------\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_ATTRIBUTE_NAME_STATE;else if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) this.currentToken.tagName += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentToken.tagName += toChar(cp);\n};\n\n//12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RCDATA_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n    this._reconsumeInState(RCDATA_STATE);\n  }\n};\n\n//12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n    this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n    this._emitChar('/');\n    this._reconsumeInState(RCDATA_STATE);\n  }\n};\n\n//12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n      if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n        return;\n      }\n    }\n    this._emitChar('<');\n    this._emitChar('/');\n    this._emitSeveralCodePoints(this.tempBuff);\n    this._reconsumeInState(RCDATA_STATE);\n  }\n};\n\n//12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RAWTEXT_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n};\n\n//12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n    this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n    this._emitChar('/');\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n};\n\n//12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n    this._emitChar('<');\n    this._emitChar('/');\n    this._emitSeveralCodePoints(this.tempBuff);\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n};\n\n//12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n  } else if (cp === $.EXCLAMATION_MARK) {\n    this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n    this._emitChar('<');\n    this._emitChar('!');\n  } else {\n    this._emitChar('<');\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n};\n\n//12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n    this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n    this._emitChar('/');\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n};\n\n//12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      } else if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      } else if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n    this._emitChar('<');\n    this._emitChar('/');\n    this._emitSeveralCodePoints(this.tempBuff);\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n};\n\n//12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n//12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n//12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n};\n\n//12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n    this._emitCodePoint(cp);\n  }\n};\n\n//12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n    this._emitCodePoint(cp);\n  }\n};\n\n//12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n  } else if (isAsciiLetter(cp)) {\n    this.tempBuff = [];\n    this._emitChar('<');\n    this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n  } else {\n    this._emitChar('<');\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n};\n\n//12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n    this._emitChar('/');\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n};\n\n//12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n    this._emitChar('<');\n    this._emitChar('/');\n    this._emitSeveralCodePoints(this.tempBuff);\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n};\n\n//12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n};\n\n//12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n    this._emitChar('<');\n  } else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n};\n\n//12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n    this._emitChar('<');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n    this._emitCodePoint(cp);\n  }\n};\n\n//12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n    this._emitChar('<');\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n    this._emitCodePoint(cp);\n  }\n};\n\n//12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n    this._emitChar('/');\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n//12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n//12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);else if (cp === $.EQUALS_SIGN) {\n    this._createAttr('=');\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else {\n    this._createAttr('');\n    this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n  }\n};\n\n//12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n    this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n    this._unconsume();\n  } else if (cp === $.EQUALS_SIGN) this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);else if (isAsciiUpper(cp)) this.currentAttr.name += toAsciiLowerChar(cp);else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) this.currentAttr.name += toChar(cp);else if (cp === $.NULL) this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;else this.currentAttr.name += toChar(cp);\n};\n\n//12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.EQUALS_SIGN) this.state = BEFORE_ATTRIBUTE_VALUE_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this._createAttr('');\n    this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n  }\n};\n\n//12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.QUOTATION_MARK) this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;else if (cp === $.APOSTROPHE) this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;else this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n};\n\n//12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.QUOTATION_MARK;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n};\n\n//12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.APOSTROPHE;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n};\n\n//12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrValue(DATA_STATE);\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) this.currentAttr.value += toChar(cp);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n};\n\n//12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n  var referencedCodePoints = this._consumeCharacterReference(cp, true);\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) {\n      for (var i = 0; i < referencedCodePoints.length; i++) this.currentAttr.value += toChar(referencedCodePoints[i]);\n    } else this.currentAttr.value += '&';\n    this.state = this.returnState;\n  }\n};\n\n//12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);else if (cp === $.SOLIDUS) this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrValue(DATA_STATE);\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n//12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.selfClosing = true;\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n//12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n  this._createCommentToken();\n  this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n};\n\n//HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've\n//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce\n//comment token on each call.\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n  while (true) {\n    if (cp === $.GREATER_THAN_SIGN) {\n      this.state = DATA_STATE;\n      break;\n    } else if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n      break;\n    } else {\n      this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n      this._hibernationSnapshot();\n      cp = this._consume();\n      if (this._ensureHibernation()) return;\n    }\n  }\n  this._emitCurrentToken();\n};\n\n//12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n  var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n    doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n    cdataMatch = !dashDashMatch && !doctypeMatch && this.allowCDATA && this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n  if (!this._ensureHibernation()) {\n    if (dashDashMatch) {\n      this._createCommentToken();\n      this.state = COMMENT_START_STATE;\n    } else if (doctypeMatch) this.state = DOCTYPE_STATE;else if (cdataMatch) this.state = CDATA_SECTION_STATE;else this._reconsumeInState(BOGUS_COMMENT_STATE);\n  }\n};\n\n//12.2.4.46 Comment start state\n//------------------------------------------------------------------\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_START_DASH_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n//12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n//12.2.4.48 Comment state\n//------------------------------------------------------------------\n_[COMMENT_STATE] = function commentState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_DASH_STATE;else if (cp === $.NULL) this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.data += toChar(cp);\n};\n\n//12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n//12.2.4.50 Comment end state\n//------------------------------------------------------------------\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (cp === $.EXCLAMATION_MARK) this.state = COMMENT_END_BANG_STATE;else if (cp === $.HYPHEN_MINUS) this.currentToken.data += '-';else if (cp === $.NULL) {\n    this.currentToken.data += '--';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n    this._emitCurrentToken();\n  } else {\n    this.currentToken.data += '--';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n//12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.currentToken.data += '--!';\n    this.state = COMMENT_END_DASH_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) {\n    this.currentToken.data += '--!';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '--!';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n//12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n  if (isWhitespace(cp)) return;else if (cp === $.GREATER_THAN_SIGN) {\n    this._createDoctypeToken(null);\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._createDoctypeToken(null);\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this._createDoctypeToken('');\n    this._reconsumeInState(DOCTYPE_NAME_STATE);\n  }\n};\n\n//12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n  if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF) this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);else if (isAsciiUpper(cp)) this.currentToken.name += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;else this.currentToken.name += toChar(cp);\n};\n\n//12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n    this._emitCurrentToken();\n  } else {\n    var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n      systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n    if (!this._ensureHibernation()) {\n      if (publicMatch) this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;else if (systemMatch) this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else {\n        this.currentToken.forceQuirks = true;\n        this.state = BOGUS_DOCTYPE_STATE;\n      }\n    }\n  }\n};\n\n//12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n};\n\n//12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n};\n\n//12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n};\n\n//12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n};\n\n//12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n};\n\n//12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n};\n\n//12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n};\n\n//12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  } else this.state = BOGUS_DOCTYPE_STATE;\n};\n\n//12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n    this._reconsumeInState(DATA_STATE);\n  }\n};\n\n//12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n  while (true) {\n    if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n      break;\n    } else {\n      var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n      if (this._ensureHibernation()) break;\n      if (cdataEndMatch) {\n        this.state = DATA_STATE;\n        break;\n      }\n      this._emitCodePoint(cp);\n      this._hibernationSnapshot();\n      cp = this._consume();\n      if (this._ensureHibernation()) break;\n    }\n  }\n};","map":{"version":3,"names":["Preprocessor","require","UNICODE","neTree","$","CODE_POINTS","$$","CODE_POINT_SEQUENCES","NUMERIC_ENTITY_REPLACEMENTS","HAS_DATA_FLAG","DATA_DUPLET_FLAG","HAS_BRANCHES_FLAG","MAX_BRANCH_MARKER_VALUE","DATA_STATE","CHARACTER_REFERENCE_IN_DATA_STATE","RCDATA_STATE","CHARACTER_REFERENCE_IN_RCDATA_STATE","RAWTEXT_STATE","SCRIPT_DATA_STATE","PLAINTEXT_STATE","TAG_OPEN_STATE","END_TAG_OPEN_STATE","TAG_NAME_STATE","RCDATA_LESS_THAN_SIGN_STATE","RCDATA_END_TAG_OPEN_STATE","RCDATA_END_TAG_NAME_STATE","RAWTEXT_LESS_THAN_SIGN_STATE","RAWTEXT_END_TAG_OPEN_STATE","RAWTEXT_END_TAG_NAME_STATE","SCRIPT_DATA_LESS_THAN_SIGN_STATE","SCRIPT_DATA_END_TAG_OPEN_STATE","SCRIPT_DATA_END_TAG_NAME_STATE","SCRIPT_DATA_ESCAPE_START_STATE","SCRIPT_DATA_ESCAPE_START_DASH_STATE","SCRIPT_DATA_ESCAPED_STATE","SCRIPT_DATA_ESCAPED_DASH_STATE","SCRIPT_DATA_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE","BEFORE_ATTRIBUTE_NAME_STATE","ATTRIBUTE_NAME_STATE","AFTER_ATTRIBUTE_NAME_STATE","BEFORE_ATTRIBUTE_VALUE_STATE","ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE","ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE","ATTRIBUTE_VALUE_UNQUOTED_STATE","CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE","AFTER_ATTRIBUTE_VALUE_QUOTED_STATE","SELF_CLOSING_START_TAG_STATE","BOGUS_COMMENT_STATE","BOGUS_COMMENT_STATE_CONTINUATION","MARKUP_DECLARATION_OPEN_STATE","COMMENT_START_STATE","COMMENT_START_DASH_STATE","COMMENT_STATE","COMMENT_END_DASH_STATE","COMMENT_END_STATE","COMMENT_END_BANG_STATE","DOCTYPE_STATE","DOCTYPE_NAME_STATE","AFTER_DOCTYPE_NAME_STATE","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE","BOGUS_DOCTYPE_STATE","CDATA_SECTION_STATE","isWhitespace","cp","SPACE","LINE_FEED","TABULATION","FORM_FEED","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLetter","isAsciiAlphaNumeric","isDigit","isHex","LATIN_CAPITAL_F","LATIN_SMALL_F","isReservedCodePoint","toAsciiLowerCodePoint","toChar","String","fromCharCode","toAsciiLowerChar","findNamedEntityTreeBranch","nodeIx","branchCount","lo","hi","mid","midCp","Tokenizer","module","exports","preprocessor","tokenQueue","allowCDATA","state","returnState","tempBuff","additionalAllowedCp","lastStartTagName","consumedAfterSnapshot","active","currentCharacterToken","currentToken","currentAttr","CHARACTER_TOKEN","NULL_CHARACTER_TOKEN","WHITESPACE_CHARACTER_TOKEN","START_TAG_TOKEN","END_TAG_TOKEN","COMMENT_TOKEN","DOCTYPE_TOKEN","EOF_TOKEN","HIBERNATION_TOKEN","MODE","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","PLAINTEXT","getTokenAttr","token","attrName","i","attrs","length","name","value","prototype","getNextToken","_hibernationSnapshot","_consume","_ensureHibernation","shift","write","chunk","isLastChunk","insertHtmlAtCurrentPos","endOfChunkHit","retreat","push","type","advance","_unconsume","_unconsumeSeveral","count","_reconsumeInState","_consumeSubsequentIfMatch","pattern","startCp","caseSensitive","consumedCount","isMatch","patternLength","patternPos","patternCp","EOF","_lookahead","isTempBufferEqualToScriptString","SCRIPT_STRING","_createStartTagToken","tagName","selfClosing","_createEndTagToken","_createCommentToken","data","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","ch","chars","_createAttr","attrNameFirstCh","_isDuplicateAttr","_leaveAttrName","toState","_leaveAttrValue","_isAppropriateEndTagToken","_emitCurrentToken","_emitCurrentCharacterToken","_emitEOFToken","_appendCharToCurrentCharacterToken","_emitCodePoint","NULL","_emitSeveralCodePoints","codePoints","_emitChar","_consumeNumericEntity","digits","nextCp","SEMICOLON","referencedCp","parseInt","replacement","REPLACEMENT_CHARACTER","_consumeNamedEntity","inAttr","referencedCodePoints","referenceSize","semicolonTerminated","current","inNode","nodeWithData","EQUALS_SIGN","_consumeCharacterReference","GREATER_THAN_SIGN","AMPERSAND","NUMBER_SIGN","LATIN_SMALL_X","LATIN_CAPITAL_X","_","dataState","dropParsedChunk","LESS_THAN_SIGN","characterReferenceInDataState","rcdataState","characterReferenceInRcdataState","rawtextState","scriptDataState","plaintextState","tagOpenState","EXCLAMATION_MARK","SOLIDUS","QUESTION_MARK","endTagOpenState","tagNameState","rcdataLessThanSignState","rcdataEndTagOpenState","rcdataEndTagNameState","rawtextLessThanSignState","rawtextEndTagOpenState","rawtextEndTagNameState","scriptDataLessThanSignState","scriptDataEndTagOpenState","scriptDataEndTagNameState","scriptDataEscapeStartState","HYPHEN_MINUS","scriptDataEscapeStartDashState","scriptDataEscapedState","scriptDataEscapedDashState","scriptDataEscapedDashDashState","scriptDataEscapedLessThanSignState","scriptDataEscapedEndTagOpenState","scriptDataEscapedEndTagNameState","scriptDataDoubleEscapeStartState","scriptDataDoubleEscapedState","scriptDataDoubleEscapedDashState","scriptDataDoubleEscapedDashDashState","scriptDataDoubleEscapedLessThanSignState","scriptDataDoubleEscapeEndState","beforeAttributeNameState","attributeNameState","QUOTATION_MARK","APOSTROPHE","afterAttributeNameState","beforeAttributeValueState","attributeValueDoubleQuotedState","attributeValueSingleQuotedState","attributeValueUnquotedState","GRAVE_ACCENT","characterReferenceInAttributeValueState","afterAttributeValueQuotedState","selfClosingStartTagState","bogusCommentState","bogusCommentStateContinuation","markupDeclarationOpenState","dashDashMatch","DASH_DASH_STRING","doctypeMatch","DOCTYPE_STRING","cdataMatch","CDATA_START_STRING","commentStartState","commentStartDashState","commentState","commentEndDashState","commentEndState","commentEndBangState","doctypeState","doctypeNameState","afterDoctypeNameState","publicMatch","PUBLIC_STRING","systemMatch","SYSTEM_STRING","beforeDoctypePublicIdentifierState","doctypePublicIdentifierDoubleQuotedState","doctypePublicIdentifierSingleQuotedState","betweenDoctypePublicAndSystemIdentifiersState","beforeDoctypeSystemIdentifierState","doctypeSystemIdentifierDoubleQuotedState","doctypeSystemIdentifierSingleQuotedState","afterDoctypeSystemIdentifierState","bogusDoctypeState","cdataSectionState","cdataEndMatch","CDATA_END_STRING"],"sources":["C:/Users/Sator/WebProjects/kanjiMnemonics/create-react-app/node_modules/react-render-html/node_modules/parse5/lib/tokenizer/index.js"],"sourcesContent":["'use strict';\n\nvar Preprocessor = require('./preprocessor'),\n    UNICODE = require('../common/unicode'),\n    neTree = require('./named_entity_data');\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES;\n\n//Replacement code points for numeric entities\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,\n    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,\n    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,\n    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,\n    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178\n};\n\n// Named entity tree flags\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n\n//States\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isDigit(cp, isHex) {\n    return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F ||\n                                         cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xFFFF)\n        return String.fromCharCode(cp);\n\n    cp -= 0x10000;\n    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    var branchCount = neTree[++nodeIx],\n        lo = ++nodeIx,\n        hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        var mid = lo + hi >>> 1,\n            midCp = neTree[mid];\n\n        if (midCp < cp)\n            lo = mid + 1;\n\n        else if (midCp > cp)\n            hi = mid - 1;\n\n        else\n            return neTree[mid + branchCount];\n    }\n\n    return -1;\n}\n\n\n//Tokenizer\nvar Tokenizer = module.exports = function () {\n    this.preprocessor = new Preprocessor();\n\n    this.tokenQueue = [];\n\n    this.allowCDATA = false;\n\n    this.state = DATA_STATE;\n    this.returnState = '';\n\n    this.tempBuff = [];\n    this.additionalAllowedCp = void 0;\n    this.lastStartTagName = '';\n\n    this.consumedAfterSnapshot = -1;\n    this.active = false;\n\n    this.currentCharacterToken = null;\n    this.currentToken = null;\n    this.currentAttr = null;\n};\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function (token, attrName) {\n    for (var i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName)\n            return token.attrs[i].value;\n    }\n\n    return null;\n};\n\n//API\nTokenizer.prototype.getNextToken = function () {\n    while (!this.tokenQueue.length && this.active) {\n        this._hibernationSnapshot();\n\n        var cp = this._consume();\n\n        if (!this._ensureHibernation())\n            this[this.state](cp);\n    }\n\n    return this.tokenQueue.shift();\n};\n\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n    this.active = true;\n    this.preprocessor.write(chunk, isLastChunk);\n};\n\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n    this.active = true;\n    this.preprocessor.insertHtmlAtCurrentPos(chunk);\n};\n\n//Hibernation\nTokenizer.prototype._hibernationSnapshot = function () {\n    this.consumedAfterSnapshot = 0;\n};\n\nTokenizer.prototype._ensureHibernation = function () {\n    if (this.preprocessor.endOfChunkHit) {\n        for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)\n            this.preprocessor.retreat();\n\n        this.active = false;\n        this.tokenQueue.push({type: Tokenizer.HIBERNATION_TOKEN});\n\n        return true;\n    }\n\n    return false;\n};\n\n\n//Consumption\nTokenizer.prototype._consume = function () {\n    this.consumedAfterSnapshot++;\n    return this.preprocessor.advance();\n};\n\nTokenizer.prototype._unconsume = function () {\n    this.consumedAfterSnapshot--;\n    this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n    while (count--)\n        this._unconsume();\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n    this.state = state;\n    this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n    var consumedCount = 0,\n        isMatch = true,\n        patternLength = pattern.length,\n        patternPos = 0,\n        cp = startCp,\n        patternCp = void 0;\n\n    for (; patternPos < patternLength; patternPos++) {\n        if (patternPos > 0) {\n            cp = this._consume();\n            consumedCount++;\n        }\n\n        if (cp === $.EOF) {\n            isMatch = false;\n            break;\n        }\n\n        patternCp = pattern[patternPos];\n\n        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n            isMatch = false;\n            break;\n        }\n    }\n\n    if (!isMatch)\n        this._unconsumeSeveral(consumedCount);\n\n    return isMatch;\n};\n\n//Lookahead\nTokenizer.prototype._lookahead = function () {\n    var cp = this._consume();\n\n    this._unconsume();\n\n    return cp;\n};\n\n//Temp buffer\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)\n        return false;\n\n    for (var i = 0; i < this.tempBuff.length; i++) {\n        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])\n            return false;\n    }\n\n    return true;\n};\n\n//Token creation\nTokenizer.prototype._createStartTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.START_TAG_TOKEN,\n        tagName: '',\n        selfClosing: false,\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createEndTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.END_TAG_TOKEN,\n        tagName: '',\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createCommentToken = function () {\n    this.currentToken = {\n        type: Tokenizer.COMMENT_TOKEN,\n        data: ''\n    };\n};\n\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n    this.currentToken = {\n        type: Tokenizer.DOCTYPE_TOKEN,\n        name: initialName,\n        forceQuirks: false,\n        publicId: null,\n        systemId: null\n    };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n    this.currentCharacterToken = {\n        type: type,\n        chars: ch\n    };\n};\n\n//Tag attributes\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n    this.currentAttr = {\n        name: attrNameFirstCh,\n        value: ''\n    };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n    this.state = toState;\n\n    if (!this._isDuplicateAttr())\n        this.currentToken.attrs.push(this.currentAttr);\n};\n\nTokenizer.prototype._leaveAttrValue = function (toState) {\n    this.state = toState;\n};\n\n//Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n    return this.lastStartTagName === this.currentToken.tagName;\n};\n\n//Token emission\nTokenizer.prototype._emitCurrentToken = function () {\n    this._emitCurrentCharacterToken();\n\n    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)\n        this.lastStartTagName = this.currentToken.tagName;\n\n    this.tokenQueue.push(this.currentToken);\n    this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n    if (this.currentCharacterToken) {\n        this.tokenQueue.push(this.currentCharacterToken);\n        this.currentCharacterToken = null;\n    }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n    this._emitCurrentCharacterToken();\n    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});\n};\n\n//Characters emission\n\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)\n        this._emitCurrentCharacterToken();\n\n    if (this.currentCharacterToken)\n        this.currentCharacterToken.chars += ch;\n\n    else\n        this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n    var type = Tokenizer.CHARACTER_TOKEN;\n\n    if (isWhitespace(cp))\n        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n    else if (cp === $.NULL)\n        type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n    this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n    for (var i = 0; i < codePoints.length; i++)\n        this._emitCodePoint(codePoints[i]);\n};\n\n//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\nTokenizer.prototype._emitChar = function (ch) {\n    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n};\n\n//Character reference tokenization\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n    var digits = '',\n        nextCp = void 0;\n\n    do {\n        digits += toChar(this._consume());\n        nextCp = this._lookahead();\n    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n    if (this._lookahead() === $.SEMICOLON)\n        this._consume();\n\n    var referencedCp = parseInt(digits, isHex ? 16 : 10),\n        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n\n    if (replacement)\n        return replacement;\n\n    if (isReservedCodePoint(referencedCp))\n        return $.REPLACEMENT_CHARACTER;\n\n    return referencedCp;\n};\n\n// NOTE: for the details on this algorithm see\n// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n    var referencedCodePoints = null,\n        referenceSize = 0,\n        cp = null,\n        consumedCount = 0,\n        semicolonTerminated = false;\n\n    for (var i = 0; i > -1;) {\n        var current = neTree[i],\n            inNode = current < MAX_BRANCH_MARKER_VALUE,\n            nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n        if (nodeWithData) {\n            referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n            referenceSize = consumedCount;\n\n            if (cp === $.SEMICOLON) {\n                semicolonTerminated = true;\n                break;\n            }\n        }\n\n        cp = this._consume();\n        consumedCount++;\n\n        if (cp === $.EOF)\n            break;\n\n        if (inNode)\n            i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n\n        else\n            i = cp === current ? ++i : -1;\n    }\n\n\n    if (referencedCodePoints) {\n        if (!semicolonTerminated) {\n            //NOTE: unconsume excess (e.g. 'it' in '&notit')\n            this._unconsumeSeveral(consumedCount - referenceSize);\n\n            //NOTE: If the character reference is being consumed as part of an attribute and the next character\n            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n            //unconsumed, and nothing is returned.\n            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n            //parse error, because some legacy user agents will misinterpret the markup in those cases.\n            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n            if (inAttr) {\n                var nextCp = this._lookahead();\n\n                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n                    this._unconsumeSeveral(referenceSize);\n                    return null;\n                }\n            }\n        }\n\n        return referencedCodePoints;\n    }\n\n    this._unconsumeSeveral(consumedCount);\n\n    return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n    if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||\n        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n        //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n        this._unconsume();\n        return null;\n    }\n\n    if (startCp === $.NUMBER_SIGN) {\n        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n        var isHex = false,\n            nextCp = this._lookahead();\n\n        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n            this._consume();\n            isHex = true;\n        }\n\n        nextCp = this._lookahead();\n\n        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n        if (nextCp !== $.EOF && isDigit(nextCp, isHex))\n            return [this._consumeNumericEntity(isHex)];\n\n        //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n        //and the 'x'-character if appropriate.\n        this._unconsumeSeveral(isHex ? 2 : 1);\n        return null;\n    }\n\n    this._unconsume();\n\n    return this._consumeNamedEntity(inAttr);\n};\n\n//State machine\nvar _ = Tokenizer.prototype;\n\n//12.2.4.1 Data state\n//------------------------------------------------------------------\n_[DATA_STATE] = function dataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = TAG_OPEN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitCodePoint(cp);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = DATA_STATE;\n    }\n};\n\n\n//12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n_[RCDATA_STATE] = function rcdataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = RCDATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = RCDATA_STATE;\n    }\n};\n\n\n//12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.6 Script data state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.8 Tag open state\n//------------------------------------------------------------------\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n    if (cp === $.EXCLAMATION_MARK)\n        this.state = MARKUP_DECLARATION_OPEN_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = END_TAG_OPEN_STATE;\n\n    else if (isAsciiLetter(cp)) {\n        this._createStartTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.QUESTION_MARK)\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.9 End tag open state\n//------------------------------------------------------------------\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN)\n        this.state = DATA_STATE;\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitChar('<');\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n};\n\n\n//12.2.4.10 Tag name state\n//------------------------------------------------------------------\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n    if (isWhitespace(cp))\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentToken.tagName += toChar(cp);\n};\n\n\n//12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RCDATA_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this.state = DATA_STATE;\n                this._emitCurrentToken();\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RAWTEXT_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n    }\n\n    else if (cp === $.EXCLAMATION_MARK) {\n        this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n        this._emitChar('<');\n        this._emitChar('!');\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            else if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            else if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n    }\n\n    else if (isAsciiLetter(cp)) {\n        this.tempBuff = [];\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n};\n\n\n//12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.EQUALS_SIGN) {\n        this._createAttr('=');\n        this.state = ATTRIBUTE_NAME_STATE;\n    }\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n        this._unconsume();\n    }\n\n    else if (cp === $.EQUALS_SIGN)\n        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentAttr.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)\n        this.currentAttr.name += toChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentAttr.name += toChar(cp);\n};\n\n\n//12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.EQUALS_SIGN)\n        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK)\n        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n\n    else if (cp === $.APOSTROPHE)\n        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n\n    else\n        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n};\n\n\n//12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.QUOTATION_MARK;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.APOSTROPHE;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||\n             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT)\n        this.currentAttr.value += toChar(cp);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n    var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints) {\n            for (var i = 0; i < referencedCodePoints.length; i++)\n                this.currentAttr.value += toChar(referencedCodePoints[i]);\n        }\n        else\n            this.currentAttr.value += '&';\n\n        this.state = this.returnState;\n    }\n};\n\n\n//12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.SOLIDUS)\n        this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.selfClosing = true;\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n    this._createCommentToken();\n    this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n};\n\n//HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've\n//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce\n//comment token on each call.\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n    while (true) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            break;\n        }\n\n        else if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                return;\n        }\n    }\n\n    this._emitCurrentToken();\n};\n\n//12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n    var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n        doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n        cdataMatch = !dashDashMatch && !doctypeMatch &&\n                     this.allowCDATA &&\n                     this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (dashDashMatch) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        }\n\n        else if (doctypeMatch)\n            this.state = DOCTYPE_STATE;\n\n        else if (cdataMatch)\n            this.state = CDATA_SECTION_STATE;\n\n        else\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n    }\n};\n\n\n//12.2.4.46 Comment start state\n//------------------------------------------------------------------\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_START_DASH_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.48 Comment state\n//------------------------------------------------------------------\n_[COMMENT_STATE] = function commentState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_DASH_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.data += toChar(cp);\n};\n\n\n//12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.50 Comment end state\n//------------------------------------------------------------------\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EXCLAMATION_MARK)\n        this.state = COMMENT_END_BANG_STATE;\n\n    else if (cp === $.HYPHEN_MINUS)\n        this.currentToken.data += '-';\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else {\n        this.currentToken.data += '--';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.currentToken.data += '--!';\n        this.state = COMMENT_END_DASH_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--!';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '--!';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n    else {\n        this._createDoctypeToken('');\n        this._reconsumeInState(DOCTYPE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentToken.name += toChar(cp);\n};\n\n\n//12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else {\n        var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n            systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n\n        if (!this._ensureHibernation()) {\n            if (publicMatch)\n                this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n\n            else if (systemMatch)\n                this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n            else {\n                this.currentToken.forceQuirks = true;\n                this.state = BOGUS_DOCTYPE_STATE;\n            }\n        }\n    }\n};\n\n\n//12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.state = BOGUS_DOCTYPE_STATE;\n};\n\n\n//12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n    while (true) {\n        if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n\n            if (this._ensureHibernation())\n                break;\n\n            if (cdataEndMatch) {\n                this.state = DATA_STATE;\n                break;\n            }\n\n            this._emitCodePoint(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                break;\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}