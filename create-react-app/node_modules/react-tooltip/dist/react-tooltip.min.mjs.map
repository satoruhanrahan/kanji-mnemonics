{"version":3,"file":"react-tooltip.min.mjs","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils/debounce.ts","../src/components/TooltipProvider/TooltipProvider.tsx","../src/components/TooltipProvider/TooltipWrapper.tsx","../src/utils/use-isomorphic-layout-effect.ts","../src/utils/get-scroll-parent.ts","../src/utils/compute-positions.ts","../src/components/Tooltip/Tooltip.tsx","../src/components/TooltipContent/TooltipContent.tsx","../src/components/TooltipController/TooltipController.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","const isScrollable = (node: Element) => {\n  if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n    return false\n  }\n  const style = getComputedStyle(node)\n  return ['overflow', 'overflow-x', 'overflow-y'].some((propertyName) => {\n    const value = style.getPropertyValue(propertyName)\n    return value === 'auto' || value === 'scroll'\n  })\n}\n\nexport const getScrollParent = (node: Element | null) => {\n  if (!node) {\n    return null\n  }\n  let currentParent = node.parentElement\n  while (currentParent) {\n    if (isScrollable(currentParent)) {\n      return currentParent\n    }\n    currentParent = currentParent.parentElement\n  }\n  return document.scrollingElement || document.documentElement\n}\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { getScrollParent } from 'utils/get-scroll-parent'\nimport { computeTooltipPosition } from 'utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    const handleScrollResize = () => {\n      handleShow(false)\n    }\n\n    const anchorScrollParent = getScrollParent(activeAnchor)\n    const tooltipScrollParent = getScrollParent(tooltipRef.current)\n\n    if (closeOnScroll) {\n      window.addEventListener('scroll', handleScrollResize)\n      anchorScrollParent?.addEventListener('scroll', handleScrollResize)\n      tooltipScrollParent?.addEventListener('scroll', handleScrollResize)\n    }\n    if (closeOnResize) {\n      window.addEventListener('resize', handleScrollResize)\n    }\n\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.key !== 'Escape') {\n        return\n      }\n      handleShow(false)\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (closeOnScroll) {\n        window.removeEventListener('scroll', handleScrollResize)\n        anchorScrollParent?.removeEventListener('scroll', handleScrollResize)\n        tooltipScrollParent?.removeEventListener('scroll', handleScrollResize)\n      }\n      if (closeOnResize) {\n        window.removeEventListener('resize', handleScrollResize)\n      }\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              if (tooltipShowDelayTimerRef.current) {\n                clearTimeout(tooltipShowDelayTimerRef.current)\n              }\n              if (tooltipHideDelayTimerRef.current) {\n                clearTimeout(tooltipHideDelayTimerRef.current)\n              }\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = !hidden && content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipHidden, setTooltipHidden] = useState(hidden)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n      hidden: (value) => {\n        setTooltipHidden(value === null ? hidden : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    setTooltipVariant(variant)\n  }, [variant])\n\n  useEffect(() => {\n    setTooltipOffset(offset)\n  }, [offset])\n\n  useEffect(() => {\n    setTooltipDelayShow(delayShow)\n  }, [delayShow])\n\n  useEffect(() => {\n    setTooltipDelayHide(delayHide)\n  }, [delayHide])\n\n  useEffect(() => {\n    setTooltipFloat(float)\n  }, [float])\n\n  useEffect(() => {\n    setTooltipHidden(hidden)\n  }, [hidden])\n\n  useEffect(() => {\n    setTooltipPositionStrategy(positionStrategy)\n  }, [positionStrategy])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${selector}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < render or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    const rendered = render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode\n    renderedContent = rendered ? (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {rendered}\n      </div>\n    ) : null\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    hidden: tooltipHidden,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    closeOnScroll,\n    closeOnResize,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","debounce","func","wait","immediate","timeout","args","later","apply","this","setTimeout","clearTimeout","DEFAULT_TOOLTIP_ID","DEFAULT_CONTEXT_DATA","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","TooltipContext","createContext","getTooltipData","TooltipProvider","children","anchorRefMap","setAnchorRefMap","useState","activeAnchorMap","setActiveAnchorMap","tooltipId","refs","oldMap","tooltipRefs","_a","forEach","add","delete","useCallback","_b","context","useMemo","React","Provider","value","useTooltip","useContext","TooltipWrapper","className","place","content","html","variant","offset","wrapper","events","positionStrategy","delayShow","delayHide","anchorRef","useRef","useEffect","classNames","useIsomorphicLayoutEffect","window","useLayoutEffect","isScrollable","node","HTMLElement","SVGElement","getComputedStyle","some","propertyName","getPropertyValue","getScrollParent","currentParent","parentElement","scrollingElement","documentElement","computeTooltipPosition","async","elementReference","tooltipReference","tooltipArrowReference","offsetValue","strategy","middlewares","Number","flip","shift","padding","tooltipStyles","tooltipArrowStyles","middleware","push","arrow","element","computePosition","placement","then","x","y","middlewareData","styles","left","top","arrowX","arrowY","right","bottom","split","Tooltip","id","classNameArrow","anchorId","anchorSelect","openOnClick","WrapperElement","float","hidden","noArrow","clickable","closeOnEsc","closeOnScroll","closeOnResize","externalStyles","position","afterShow","afterHide","contentWrapperRef","isOpen","setIsOpen","tooltipRef","tooltipArrowRef","tooltipShowDelayTimerRef","tooltipHideDelayTimerRef","actualPlacement","setActualPlacement","inlineStyles","setInlineStyles","inlineArrowStyles","setInlineArrowStyles","show","setShow","rendered","setRendered","wasShowing","lastFloatPosition","setProviderActiveAnchor","hoveringTooltip","anchorsBySelect","setAnchorsBySelect","mounted","shouldOpenOnClick","includes","handleShow","undefined","handleHideTooltipDelayed","delay","handleShowTooltip","event","target","currentTarget","isConnected","handleHideTooltip","handleTooltipPosition","getBoundingClientRect","width","height","computedStylesData","Object","keys","length","handleMouseMove","mouseEvent","mousePosition","clientX","clientY","handleClickTooltipAnchor","handleClickOutsideAnchors","querySelector","anchor","contains","debouncedHandleShowTooltip","debouncedHandleHideTooltip","elementRefs","anchorById","handleScrollResize","anchorScrollParent","tooltipScrollParent","addEventListener","handleEsc","key","enabledEvents","listener","handleMouseEnterTooltip","handleMouseLeaveTooltip","removeEventListener","selector","documentObserver","MutationObserver","mutationList","newAnchors","mutation","attributeName","getAttribute","removedNodes","call","elements","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","anchors","observe","body","childList","subtree","attributes","attributeFilter","disconnect","updateTooltipPosition","contentObserver","ResizeObserver","Array","from","canShow","role","TooltipContent","dangerouslySetInnerHTML","__html","TooltipController","render","tooltipContent","setTooltipContent","tooltipHtml","setTooltipHtml","tooltipPlace","setTooltipPlace","tooltipVariant","setTooltipVariant","tooltipOffset","setTooltipOffset","tooltipDelayShow","setTooltipDelayShow","tooltipDelayHide","setTooltipDelayHide","tooltipFloat","setTooltipFloat","tooltipHidden","setTooltipHidden","tooltipWrapper","setTooltipWrapper","tooltipEvents","setTooltipEvents","tooltipPositionStrategy","setTooltipPositionStrategy","providerActiveAnchor","getDataAttributesFromAnchorElement","getAttributeNames","reduce","acc","name","startsWith","replace","applyAllDataAttributesFromAnchorElement","dataAttributes","handleDataAttributes","parsed","values","handler","entries","console","warn","size","anchorElement","observer","observerConfig","renderedContent","props"],"mappings":"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"}